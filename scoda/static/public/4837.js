"use strict";(self.webpackChunkocl_bb_library=self.webpackChunkocl_bb_library||[]).push([[4837],{80443:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ Codebook)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./node_modules/axios/index.js\nvar axios = __webpack_require__(9669);\nvar axios_default = /*#__PURE__*/__webpack_require__.n(axios);\n// EXTERNAL MODULE: ./node_modules/reactstrap/es/Table.js\nvar Table = __webpack_require__(36595);\n;// CONCATENATED MODULE: ./js/components/Codebook_Datatable.jsx\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar CodebookDatatable = /*#__PURE__*/function (_Component) {\n  _inherits(CodebookDatatable, _Component);\n  var _super = _createSuper(CodebookDatatable);\n  function CodebookDatatable(props) {\n    var _this;\n    _classCallCheck(this, CodebookDatatable);\n    _this = _super.call(this, props);\n    _this.state = {\n      data: [],\n      filters: _this.props.filteredData,\n      selected: null,\n      currentPage: 1,\n      isLoading: false,\n      isSelection: true\n    };\n    _this.selectChild = _this.selectChild.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  _createClass(CodebookDatatable, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var _this2 = this;\n      axios_default().get(\'/api/codebook/1\').then(function (res) {\n        var copyData = res.data.slice(1, res.data.length);\n        if (copyData.length > 0) {\n          _this2.setState({\n            isSelection: true\n          });\n        } else {\n          _this2.setState({\n            isSelection: false\n          });\n        }\n        _this2.setOpen(copyData);\n      });\n    }\n  }, {\n    key: "componentDidUpdate",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      var _this3 = this;\n      if (prevProps.filteredData !== this.props.filteredData) {\n        axios_default().post(\'/api/codebook/1\', this.props.filteredData).then(function (data) {\n          var copyData = data.data.slice(1, data.data.length);\n          if (copyData.length > 0) {\n            _this3.setState({\n              isSelection: true\n            });\n          } else {\n            _this3.setState({\n              isSelection: false\n            });\n          }\n          _this3.setOpen(copyData);\n        });\n      }\n    }\n  }, {\n    key: "setOpen",\n    value: function setOpen(data) {\n      // Append open property to each parent item\n      var selected = null;\n      var _iterator = _createForOfIteratorHelper(data.entries()),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n            index = _step$value[0],\n            item = _step$value[1];\n          if (!selected) {\n            item.open = item.children.length > 0;\n            selected = item.children[0];\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this.setState({\n        data: data,\n        selected: selected\n      });\n    }\n  }, {\n    key: "selectChild",\n    value: function selectChild(item) {\n      this.props.setSelectedChild(item);\n      this.setState({\n        selected: item\n      });\n    }\n  }, {\n    key: "toggleAccordion",\n    value: function toggleAccordion(index) {\n      // copy data from state\n      var copyData = this.state.data.slice();\n\n      // set the open property to true/false one the selected item\n      copyData[index].open = !copyData[index].open;\n      this.setState({\n        data: copyData\n      });\n    }\n  }, {\n    key: "selectChildAndToggleAccordion",\n    value: function selectChildAndToggleAccordion(item, index) {\n      this.selectChild(item);\n      this.toggleAccordion(index);\n    }\n  }, {\n    key: "getC88Code",\n    value: function getC88Code(code) {\n      if (!code) {\n        return;\n      }\n      return code.split(".")[0];\n    }\n  }, {\n    key: "getSORCCode",\n    value: function getSORCCode(code) {\n      if (!code) {\n        return;\n      }\n      var strArr = code.split(" ");\n      var sorc = "";\n      strArr.map(function (str) {\n        sorc += str.charAt(0);\n      });\n      return sorc;\n    }\n  }, {\n    key: "getSDG",\n    value: function getSDG(code) {\n      if (!code) {\n        return;\n      }\n      return code.match(/(?:)([0-9]+)/)[0];\n    }\n\n    // fetchData() {\n    //     let nextPage = this.state.currentPage + 1;\n\n    //     axios.get(`/api/codebook/${nextPage}`).then(res => {\n    //         const copyData = res.data.slice(1, res.data.length);\n    //         // Append open property to each parent item\n    //         for(let item of copyData) {\n    //             item.open = false;\n    //         }\n\n    //         const combinedData = [...this.state.data, ...copyData];\n\n    //         this.setState({\n    //             data: combinedData,\n    //             currentPage: nextPage,\n    //             isLoading: false,\n    //         });\n    //     });\n    // }\n\n    // trackScrolling(event) {\n    //     const bottom = event.target.scrollHeight - event.target.scrollTop === event.target.clientHeight;\n    //     if (bottom) {\n    //         this.setState({\n    //             isLoading: true\n    //         });\n    //         this.fetchData();\n    //     }\n    // }\n  }, {\n    key: "renderDesktopChildren",\n    value: function renderDesktopChildren(parent) {\n      var _this4 = this;\n      var selected = this.state.selected;\n      if (parent.children.length > 0) {\n        return parent.children.map(function (item) {\n          if (parent.open) {\n            return /*#__PURE__*/react.createElement(react.Fragment, {\n              key: item.id\n            }, /*#__PURE__*/react.createElement("tr", {\n              className: "child-item" + (selected && selected.id === item.id ? " selected-child-item" : ""),\n              onClick: function onClick() {\n                _this4.selectChild(item);\n              }\n            }, /*#__PURE__*/react.createElement("td", null), /*#__PURE__*/react.createElement("td", null, /*#__PURE__*/react.createElement("div", {\n              className: "pl-3"\n            }, item.varCode)), /*#__PURE__*/react.createElement("td", {\n              title: item.indicator,\n              colSpan: 2\n            }, /*#__PURE__*/react.createElement("div", null, item.indicator)), /*#__PURE__*/react.createElement("td", null), /*#__PURE__*/react.createElement("td", null), /*#__PURE__*/react.createElement("td", null), /*#__PURE__*/react.createElement("td", null)));\n          }\n        });\n      }\n    }\n  }, {\n    key: "renderMobileChildren",\n    value: function renderMobileChildren(parent) {\n      var _this5 = this;\n      var selected = this.state.selected;\n      if (parent.children.length > 0) {\n        return parent.children.map(function (item) {\n          if (parent.open) {\n            return /*#__PURE__*/react.createElement(react.Fragment, {\n              key: item.id\n            }, /*#__PURE__*/react.createElement("tr", {\n              className: "child-item" + (selected && selected.id === item.id ? " selected-child-item" : ""),\n              onClick: function onClick() {\n                _this5.selectChild(item);\n              }\n            }, /*#__PURE__*/react.createElement("td", {\n              width: window.innerWidth / 100 * 10 + "%"\n            }), /*#__PURE__*/react.createElement("td", {\n              width: window.innerWidth / 100 * 90 + "%",\n              colSpan: 2\n            }, /*#__PURE__*/react.createElement("div", null, item.indicator))));\n          }\n        });\n      }\n    }\n  }, {\n    key: "renderLoading",\n    value: function renderLoading() {\n      if (this.state.isLoading) {\n        return /*#__PURE__*/react.createElement("tfoot", null, /*#__PURE__*/react.createElement("tr", null, /*#__PURE__*/react.createElement("th", null), /*#__PURE__*/react.createElement("th", null), /*#__PURE__*/react.createElement("th", {\n          className: "text-center"\n        }, /*#__PURE__*/react.createElement("p", {\n          className: "codebook-loader-text"\n        }, "Loading more on scroll...")), /*#__PURE__*/react.createElement("th", null), /*#__PURE__*/react.createElement("th", null), /*#__PURE__*/react.createElement("th", null), /*#__PURE__*/react.createElement("th", null), /*#__PURE__*/react.createElement("th", null)));\n      }\n    }\n  }, {\n    key: "renderDesktopTable",\n    value: function renderDesktopTable() {\n      var _this6 = this;\n      return /*#__PURE__*/react.createElement(Table/* default */.Z, {\n        hover: true\n      }, /*#__PURE__*/react.createElement("thead", {\n        width: "100%"\n      }, /*#__PURE__*/react.createElement("tr", {\n        width: "100%"\n      }, /*#__PURE__*/react.createElement("th", {\n        width: "7%"\n      }), /*#__PURE__*/react.createElement("th", {\n        width: "13%"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "font-weight-400"\n      }, "VAR CODE")), /*#__PURE__*/react.createElement("th", {\n        width: "55%"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "font-weight-400"\n      }, "INDICATOR SHORT NAME")), /*#__PURE__*/react.createElement("th", {\n        width: "5%"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "font-weight-400"\n      }, "THEMES:")), /*#__PURE__*/react.createElement("th", {\n        width: "5%"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "font-weight-400"\n      }, "C88")), /*#__PURE__*/react.createElement("th", {\n        width: "5%"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "font-weight-400"\n      }, "SOCR")), /*#__PURE__*/react.createElement("th", {\n        width: "5%"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "font-weight-400"\n      }, "SDG")), /*#__PURE__*/react.createElement("th", {\n        width: "5%"\n      }, /*#__PURE__*/react.createElement("div", null)))), this.state.isSelection ? /*#__PURE__*/react.createElement("tbody", {\n        width: "100%"\n      }, this.state.data.map(function (parentItem, index) {\n        return /*#__PURE__*/react.createElement(react.Fragment, {\n          key: index\n        }, /*#__PURE__*/react.createElement("tr", {\n          className: "parent-item",\n          width: "100%",\n          onClick: function onClick() {\n            return _this6.selectChildAndToggleAccordion(parentItem, index);\n          }\n        }, /*#__PURE__*/react.createElement("td", {\n          width: "7%"\n        }), /*#__PURE__*/react.createElement("td", {\n          width: "13%"\n        }, /*#__PURE__*/react.createElement("div", null, parentItem.varCode)), /*#__PURE__*/react.createElement("td", {\n          width: "60%",\n          colSpan: 2,\n          title: parentItem.indicator\n        }, /*#__PURE__*/react.createElement("div", null, parentItem.indicator)), /*#__PURE__*/react.createElement("td", {\n          width: "5%"\n        }, /*#__PURE__*/react.createElement("div", {\n          className: "circle-c88"\n        }, /*#__PURE__*/react.createElement("div", {\n          className: "circle-icon-text",\n          title: parentItem.varCode\n        }, _this6.getC88Code(parentItem.varCode)))), /*#__PURE__*/react.createElement("td", {\n          width: "5%"\n        }, /*#__PURE__*/react.createElement("div", {\n          className: "circle-socr"\n        }, /*#__PURE__*/react.createElement("div", {\n          className: "circle-icon-text",\n          title: parentItem.socr\n        }, _this6.getSORCCode(parentItem.socr)))), /*#__PURE__*/react.createElement("td", {\n          width: "5%"\n        }, /*#__PURE__*/react.createElement("div", {\n          className: "circle-sdg"\n        }, /*#__PURE__*/react.createElement("div", {\n          className: "circle-icon-text",\n          title: parentItem.sdg\n        }, _this6.getSDG(parentItem.sdg)))), /*#__PURE__*/react.createElement("td", {\n          className: "tooglebtn",\n          width: "5%"\n        }, /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement("i", {\n          className: parentItem.open ? "fa fa-caret-left fa-2x hero-block-arrow-expand" : "fa fa-caret-down fa-2x hero-block-arrow-expand",\n          style: {\n            color: \'#2F3442\'\n          },\n          "aria-hidden": "true"\n        })))), _this6.renderDesktopChildren(parentItem));\n      })) : /*#__PURE__*/react.createElement("h1", {\n        className: "no-result"\n      }, "No results related to your search/filter selection"), this.renderLoading());\n    }\n  }, {\n    key: "renderMobileTable",\n    value: function renderMobileTable() {\n      var _this7 = this;\n      return /*#__PURE__*/react.createElement(Table/* default */.Z, {\n        hover: true,\n        responsive: true\n      }, /*#__PURE__*/react.createElement("thead", {\n        width: "100%"\n      }, /*#__PURE__*/react.createElement("tr", {\n        width: "100%"\n      }, /*#__PURE__*/react.createElement("th", {\n        width: window.innerWidth / 100 * 10 + "%"\n      }), /*#__PURE__*/react.createElement("th", {\n        width: window.innerWidth / 100 * 70 + "%"\n      }, /*#__PURE__*/react.createElement("div", null, "INDICATOR SHORT NAME")), /*#__PURE__*/react.createElement("th", {\n        width: window.innerWidth / 100 * 20 + "%"\n      }, /*#__PURE__*/react.createElement("div", null)))), this.state.isSelection ? /*#__PURE__*/react.createElement("tbody", {\n        width: "100%"\n      }, this.state.data.map(function (parentItem, index) {\n        return /*#__PURE__*/react.createElement(react.Fragment, {\n          key: index\n        }, /*#__PURE__*/react.createElement("tr", {\n          className: "parent-item",\n          width: "100%"\n        }, /*#__PURE__*/react.createElement("td", {\n          width: window.innerWidth / 100 * 10 + "%"\n        }), /*#__PURE__*/react.createElement("td", {\n          width: window.innerWidth / 100 * 70 + "%"\n        }, /*#__PURE__*/react.createElement("div", {\n          width: window.innerWidth / 100 * 70 + "%"\n        }, parentItem.indicator), /*#__PURE__*/react.createElement("div", {\n          className: "mobile-meta"\n        }, /*#__PURE__*/react.createElement("div", {\n          className: "mobile-text"\n        }, /*#__PURE__*/react.createElement("small", null, /*#__PURE__*/react.createElement("strong", null, parentItem.varCode))), /*#__PURE__*/react.createElement("div", {\n          className: "mobile-icons"\n        }, /*#__PURE__*/react.createElement("div", {\n          className: "circle-c88"\n        }, /*#__PURE__*/react.createElement("div", {\n          className: "circle-icon-text"\n        }, _this7.getC88Code(parentItem.varCode))), /*#__PURE__*/react.createElement("div", {\n          className: "circle-socr"\n        }, /*#__PURE__*/react.createElement("div", {\n          className: "circle-icon-text"\n        }, _this7.getSORCCode(parentItem.socr))), /*#__PURE__*/react.createElement("div", {\n          className: "circle-sdg"\n        }, /*#__PURE__*/react.createElement("div", {\n          className: "circle-icon-text"\n        }, _this7.getSDG(parentItem.sdg)))))), /*#__PURE__*/react.createElement("td", {\n          className: "tooglebtn",\n          width: window.innerWidth / 100 * 20 + "%"\n        }, /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement("i", {\n          className: parentItem.open ? "fa fa-caret-left fa-2x hero-block-arrow-expand" : "fa fa-caret-down fa-2x hero-block-arrow-expand",\n          style: {\n            color: \'#2F3442\'\n          },\n          "aria-hidden": "true",\n          onClick: function onClick() {\n            return _this7.toggleAccordion(index);\n          }\n        })))), _this7.renderMobileChildren(parentItem));\n      })) : /*#__PURE__*/react.createElement("h1", {\n        className: "no-result"\n      }, "No results related to your search/filter selection"), this.renderLoading());\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      return /*#__PURE__*/react.createElement("div", {\n        className: "data-table"\n      }, !window.innerWidth <= 768 ? this.renderDesktopTable() : this.renderMobileTable());\n    }\n  }]);\n  return CodebookDatatable;\n}(react.Component);\n\n// EXTERNAL MODULE: ./node_modules/reactstrap/es/Modal.js + 1 modules\nvar Modal = __webpack_require__(85677);\n// EXTERNAL MODULE: ./node_modules/reactstrap/es/ModalBody.js\nvar ModalBody = __webpack_require__(10684);\n// EXTERNAL MODULE: ./node_modules/reactstrap/es/Spinner.js\nvar Spinner = __webpack_require__(36955);\n;// CONCATENATED MODULE: ./js/components/Codebook_Sidebar.jsx\nfunction Codebook_Sidebar_typeof(obj) { "@babel/helpers - typeof"; return Codebook_Sidebar_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Codebook_Sidebar_typeof(obj); }\nfunction Codebook_Sidebar_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Codebook_Sidebar_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction Codebook_Sidebar_createClass(Constructor, protoProps, staticProps) { if (protoProps) Codebook_Sidebar_defineProperties(Constructor.prototype, protoProps); if (staticProps) Codebook_Sidebar_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Codebook_Sidebar_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) Codebook_Sidebar_setPrototypeOf(subClass, superClass); }\nfunction Codebook_Sidebar_setPrototypeOf(o, p) { Codebook_Sidebar_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Codebook_Sidebar_setPrototypeOf(o, p); }\nfunction Codebook_Sidebar_createSuper(Derived) { var hasNativeReflectConstruct = Codebook_Sidebar_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Codebook_Sidebar_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Codebook_Sidebar_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Codebook_Sidebar_possibleConstructorReturn(this, result); }; }\nfunction Codebook_Sidebar_possibleConstructorReturn(self, call) { if (call && (Codebook_Sidebar_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return Codebook_Sidebar_assertThisInitialized(self); }\nfunction Codebook_Sidebar_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction Codebook_Sidebar_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction Codebook_Sidebar_getPrototypeOf(o) { Codebook_Sidebar_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Codebook_Sidebar_getPrototypeOf(o); }\n\n\nvar padding = {\n  paddingBottom: \'15px\'\n};\nvar CodebookSidebar = /*#__PURE__*/function (_Component) {\n  Codebook_Sidebar_inherits(CodebookSidebar, _Component);\n  var _super = Codebook_Sidebar_createSuper(CodebookSidebar);\n  function CodebookSidebar(props) {\n    var _this;\n    Codebook_Sidebar_classCallCheck(this, CodebookSidebar);\n    _this = _super.call(this, props);\n    _this.state = {\n      data: null,\n      loader: true\n    };\n    return _this;\n  }\n  Codebook_Sidebar_createClass(CodebookSidebar, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      this.setState({\n        data: this.props.data,\n        loader: false\n      });\n    }\n  }, {\n    key: "componentDidUpdate",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      // Workaround for an issue when selecting a child item, the side-bar component does not update\n      //  This helps us trigger a re-render\n      if (prevProps.data !== this.props.data) {\n        this.setState({\n          data: this.props.data\n        });\n      }\n    }\n  }, {\n    key: "getC88Code",\n    value: function getC88Code(code) {\n      if (!code) {\n        return;\n      }\n      return code.split(".")[0];\n    }\n  }, {\n    key: "getSOCRCode",\n    value: function getSOCRCode(code) {\n      if (!code) {\n        return;\n      }\n      var strArr = code.split(" ");\n      var sorc = "";\n      strArr.map(function (str) {\n        sorc += str.charAt(0);\n      });\n      return sorc;\n    }\n  }, {\n    key: "getSDG",\n    value: function getSDG(code) {\n      if (!code) {\n        return;\n      }\n      return code.match(/(?:)([0-9]+)/)[0];\n    }\n  }, {\n    key: "renderFirstColumn",\n    value: function renderFirstColumn() {\n      return /*#__PURE__*/react.createElement("div", null, this.state.data.indicator ? /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {\n        className: "row sidebar-label"\n      }, "INDICATOR SHORT NAME"), /*#__PURE__*/react.createElement("div", {\n        className: "row item-description"\n      }, this.state.data.indicator)) : "", /*#__PURE__*/react.createElement("div", {\n        className: "row",\n        style: padding\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "col"\n      }, this.state.data.varCode ? /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {\n        className: "row sidebar-label"\n      }, "VAR CODE"), /*#__PURE__*/react.createElement("div", {\n        className: "row item-codes"\n      }, this.state.data.varCode)) : ""), /*#__PURE__*/react.createElement("div", {\n        className: "col"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "row sidebar-label"\n      }, "IND. GROUP"), /*#__PURE__*/react.createElement("div", {\n        className: "row item-codes"\n      }, this.state.data.groupCode)), /*#__PURE__*/react.createElement("div", {\n        className: "col"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "row sidebar-label"\n      }, "THEMES:")), /*#__PURE__*/react.createElement("div", {\n        className: "col-1"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "row sidebar-label"\n      }, "C88"), /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "circle-c88"\n      }, /*#__PURE__*/react.createElement("div", {\n        title: this.state.data.varCode,\n        className: "circle-icon-text"\n      }, this.getC88Code(this.state.data.varCode))))), /*#__PURE__*/react.createElement("div", {\n        className: "col-1"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "row sidebar-label"\n      }, "SOCR"), /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "circle-socr"\n      }, /*#__PURE__*/react.createElement("div", {\n        title: this.state.data.socr,\n        className: "circle-icon-text"\n      }, this.getSOCRCode(this.state.data.socr))))), /*#__PURE__*/react.createElement("div", {\n        className: "col-1"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "row sidebar-label"\n      }, "SDG"), /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "circle-sdg"\n      }, /*#__PURE__*/react.createElement("div", {\n        title: this.state.data.sdg,\n        className: "circle-icon-text"\n      }, this.getSDG(this.state.data.sdg)))))));\n    }\n  }, {\n    key: "renderSecondColumn",\n    value: function renderSecondColumn() {\n      return /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement("div", {\n        style: padding\n      }, this.state.data.definition ? /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {\n        className: "row sidebar-label"\n      }, "DEFINITION"), /*#__PURE__*/react.createElement("div", {\n        className: "row item-info"\n      }, this.state.data.definition)) : ""), /*#__PURE__*/react.createElement("div", {\n        className: "row",\n        style: padding\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "col"\n      }, this.state.data.reportingResponsibility ? /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {\n        className: "row sidebar-label"\n      }, "REPORTING RESPONSIBILITY"), /*#__PURE__*/react.createElement("div", {\n        className: "row item-info"\n      }, this.state.data.reportingResponsibility)) : ""), /*#__PURE__*/react.createElement("div", {\n        className: "col"\n      }, this.state.data.gathering_method ? /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "sidebar-label text-right",\n        style: {\n          \'width\': \'100%\'\n        }\n      }, "GATHERING METHOD")), /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "item-info text-right",\n        style: {\n          \'width\': \'100%\'\n        }\n      }, this.state.data.gathering_method))) : "")), /*#__PURE__*/react.createElement("div", {\n        className: "row",\n        style: padding\n      }, this.state.data.source_link ? /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {\n        className: "col"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "row sidebar-label"\n      }, "SOURCE"), /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("a", {\n        className: "item-link",\n        href: this.state.data.source_link\n      }, this.state.data.source)))) : ""));\n    }\n  }, {\n    key: "renderThirdColumn",\n    value: function renderThirdColumn() {\n      return /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "col"\n      }, /*#__PURE__*/react.createElement("div", {\n        style: padding\n      }, this.state.data.unit_of_measurement ? /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {\n        className: "row sidebar-label"\n      }, "UNIT OF MEASUREMENT"), /*#__PURE__*/react.createElement("div", {\n        className: "row item-info"\n      }, this.state.data.unit_of_measurement)) : ""), /*#__PURE__*/react.createElement("div", {\n        style: padding\n      }, this.state.data.notesOnCalculation ? /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {\n        className: "row sidebar-label"\n      }, "NOTES ON CALCULATION"), /*#__PURE__*/react.createElement("div", {\n        className: "row item-info"\n      }, this.state.data.notesOnCalculation)) : ""), /*#__PURE__*/react.createElement("div", {\n        style: padding\n      }, this.state.data.frequencyOfCollection ? /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {\n        className: "row sidebar-label"\n      }, "FREQUENCY OF COLLECTION"), /*#__PURE__*/react.createElement("div", {\n        className: "row item-info"\n      }, this.state.data.frequencyOfCollection)) : ""), /*#__PURE__*/react.createElement("div", {\n        style: padding\n      }, this.state.data.period ? /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {\n        className: "row sidebar-label"\n      }, "PERIOD"), /*#__PURE__*/react.createElement("div", {\n        className: "row item-info"\n      }, this.state.data.period)) : "")));\n    }\n  }, {\n    key: "renderFourthColumn",\n    value: function renderFourthColumn() {\n      return /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "col",\n        style: padding\n      }, this.state.data.variableType ? /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "sidebar-label"\n      }, "VARIABLE TYPE")), /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "item-info"\n      }, this.state.data.variableType))) : ""), /*#__PURE__*/react.createElement("div", {\n        className: "col",\n        style: padding\n      }, this.state.data.automatibility ? /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "sidebar-label text-right",\n        style: {\n          \'width\': \'100%\'\n        }\n      }, "AUTOMATABILITY")), /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "item-info text-right",\n        style: {\n          \'width\': \'100%\'\n        }\n      }, this.state.data.automatibility))) : "")), /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "col",\n        style: padding\n      }, this.state.data.granulity ? /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "sidebar-label"\n      }, "GRANULARITY")), /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "item-info"\n      }, this.state.data.granulity))) : ""), /*#__PURE__*/react.createElement("div", {\n        className: "col",\n        style: padding\n      }, this.state.data.expandability ? /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "sidebar-label text-right",\n        style: {\n          \'width\': \'100%\'\n        }\n      }, "EXPANDABILITY")), /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "item-info text-right",\n        style: {\n          \'width\': \'100%\'\n        }\n      }, this.state.data.expandability))) : "")));\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      if (this.state.loader) {\n        return /*#__PURE__*/react.createElement(Modal/* default */.Z, {\n          id: "loader",\n          isOpen: this.state.loader,\n          className: "modal-dialog-centered loader"\n        }, /*#__PURE__*/react.createElement(ModalBody/* default */.Z, null, /*#__PURE__*/react.createElement("div", {\n          className: "row"\n        }, /*#__PURE__*/react.createElement("div", {\n          className: "col-2"\n        }), /*#__PURE__*/react.createElement("div", {\n          className: "col-0 ml-3 pt-4"\n        }, /*#__PURE__*/react.createElement(Spinner/* default */.Z, {\n          type: "grow",\n          color: "secondary",\n          size: "sm"\n        }), /*#__PURE__*/react.createElement(Spinner/* default */.Z, {\n          type: "grow",\n          color: "success",\n          size: "sm"\n        }), /*#__PURE__*/react.createElement(Spinner/* default */.Z, {\n          type: "grow",\n          color: "danger",\n          size: "sm"\n        }), /*#__PURE__*/react.createElement(Spinner/* default */.Z, {\n          type: "grow",\n          color: "warning",\n          size: "sm"\n        })), /*#__PURE__*/react.createElement("div", {\n          className: "col-0 pt-4 pl-4 float-left"\n        }, "Loading Content...")), /*#__PURE__*/react.createElement("br", null)));\n      }\n      return /*#__PURE__*/react.createElement("div", {\n        className: "table-cell sidebar"\n      }, this.renderFirstColumn(), /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("hr", {\n        style: padding\n      })), this.renderSecondColumn(), /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("hr", {\n        style: padding\n      })), this.renderThirdColumn(), /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("hr", {\n        style: padding\n      })), this.renderFourthColumn(), /*#__PURE__*/react.createElement("div", {\n        className: "row",\n        style: {\n          justifyContent: \'space-around\'\n        }\n      }, this.state.data.data_check ? /*#__PURE__*/react.createElement("button", {\n        className: "action-button"\n      }, /*#__PURE__*/react.createElement("a", {\n        href: "/scoda/toolkit#/codebook-explorer/" + this.state.data.id,\n        target: "_blank"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "action-button-text"\n      }, "View in Data Explorer"))) : ""));\n    }\n  }]);\n  return CodebookSidebar;\n}(react.Component);\n\n// EXTERNAL MODULE: ./node_modules/reactstrap/es/Container.js\nvar Container = __webpack_require__(98595);\n// EXTERNAL MODULE: ./node_modules/reactstrap/es/Row.js\nvar Row = __webpack_require__(10267);\n// EXTERNAL MODULE: ./node_modules/reactstrap/es/Col.js\nvar Col = __webpack_require__(51252);\n// EXTERNAL MODULE: ./node_modules/reactstrap/es/Button.js\nvar Button = __webpack_require__(97975);\n// EXTERNAL MODULE: ./node_modules/reactstrap/es/Form.js\nvar Form = __webpack_require__(15538);\n// EXTERNAL MODULE: ./node_modules/reactstrap/es/FormGroup.js\nvar FormGroup = __webpack_require__(82669);\n// EXTERNAL MODULE: ./node_modules/reactstrap/es/Input.js\nvar Input = __webpack_require__(24670);\n;// CONCATENATED MODULE: ./js/data/filterData.js\nvar filterData = [{\n  "c88": {\n    "label": "C88 Themes",\n    "parentSelected": true,\n    "value": "All",\n    "children": [{\n      "label": "City Transformation",\n      "value": "City transformation",\n      "selected": true\n    }, {\n      "label": "Energy & Electricity",\n      "value": "Energy and electricity",\n      "selected": true\n    }, {\n      "label": "Environment & Waste",\n      "value": "Environment and waste",\n      "selected": true\n    }, {\n      "label": "Fire & Emergency",\n      "value": "Fire and emergency",\n      "selected": true\n    }, {\n      "label": "Governance",\n      "value": "Governance",\n      "selected": true\n    }, {\n      "label": "Housing & Community",\n      "value": "Housing and community",\n      "selected": true\n    }, {\n      "label": "Transport & Roads",\n      "value": "Transport and roads",\n      "selected": true\n    }, {\n      "label": "Water & Sanitation",\n      "value": "Water and sanitation",\n      "selected": true\n    }]\n  }\n}, {\n  "socr": {\n    "label": "SOCR Themes",\n    "parentSelected": true,\n    "value": "All",\n    "children": [{\n      "label": "Demography",\n      "value": "Demography",\n      "selected": true\n    }, {\n      "label": "Inclusive Cities",\n      "value": "Inclusive Cities",\n      "selected": true\n    }, {\n      "label": "Poverty and Inequality",\n      "value": "Poverty and Inequality",\n      "selected": true\n    }, {\n      "label": "Productive Cities",\n      "value": "Productive Cities",\n      "selected": true\n    }, {\n      "label": "Sustainable Cities",\n      "value": "Sustainable Cities",\n      "selected": true\n    }, {\n      "label": "Well Governed Cities",\n      "value": "Well Governed Cities",\n      "selected": true\n    }]\n  }\n}, {\n  "sdg": {\n    "label": "SDG Themes",\n    "parentSelected": true,\n    "value": "All",\n    "children": [{\n      "label": "Goal 1. End poverty in all its forms everywhere",\n      "value": "Goal 1. End poverty in all its forms everywhere",\n      "selected": true\n    }, {\n      "label": "Goal 2. End hunger, achieve food security and improved nutrition and promote sustainable agriculture",\n      "value": "Goal 2. End hunger, achieve food security and improved nutrition and promote sustainable agriculture",\n      "selected": true\n    }, {\n      "label": "Goal 3. Ensure healthy lives and promote well-being for all at all ages",\n      "value": "Goal 3. Ensure healthy lives and promote well-being for all at all ages",\n      "selected": true\n    }, {\n      "label": "Goal 4. Ensure inclusive and equitable quality education and promote lifelong learning opportunities for all",\n      "value": "Goal 4. Ensure inclusive and equitable quality education and promote lifelong learning opportunities for all",\n      "selected": true\n    }, {\n      "label": "Goal 5. Achieve gender equality and empower all women and girls",\n      "value": "Goal 5. Achieve gender equality and empower all women and girls",\n      "selected": true\n    }, {\n      "label": "Goal 6. Ensure availability and sustainable management of water and sanitation for all",\n      "value": "Goal 6. Ensure availability and sustainable management of water and sanitation for all",\n      "selected": true\n    }, {\n      "label": "Goal 7. Ensure access to affordable, reliable, sustainable and modern energy for all",\n      "value": "Goal 7. Ensure access to affordable, reliable, sustainable and modern energy for all",\n      "selected": true\n    }, {\n      "label": "Goal 8. Promote sustained, inclusive and sustainable economic growth, full and productive employment and decent work for all",\n      "value": "Goal 8. Promote sustained, inclusive and sustainable economic growth, full and productive employment and decent work for all",\n      "selected": true\n    }, {\n      "label": "Goal 9. Build resilient infrastructure, promote inclusive and sustainable industrialization and foster innovation",\n      "value": "Goal 9. Build resilient infrastructure, promote inclusive and sustainable industrialization and foster innovation",\n      "selected": true\n    }, {\n      "label": "Goal 10. Reduce inequality within and among countries",\n      "value": "Goal 10. Reduce inequality within and among countries",\n      "selected": true\n    }, {\n      "label": "Goal 11. Make cities and human settlements inclusive, safe, resilient and sustainable",\n      "value": "Goal 11. Make cities and human settlements inclusive, safe, resilient and sustainable",\n      "selected": true\n    }, {\n      "label": "Goal 12. Ensure sustainable consumption and production patterns",\n      "value": "Goal 12. Ensure sustainable consumption and production patterns",\n      "selected": true\n    }, {\n      "label": "Goal 13. Take urgent action to combat climate change and its impacts",\n      "value": "Goal 13. Take urgent action to combat climate change and its impacts",\n      "selected": true\n    }, {\n      "label": "Goal 14. Conserve and sustainably use the oceans, seas and marine resources for sustainable development",\n      "value": "Goal 14. Conserve and sustainably use the oceans, seas and marine resources for sustainable development",\n      "selected": true\n    }, {\n      "label": "Goal 15. Protect, restore and promote sustainable use of terrestrial ecosystems, sustainably manage forests, combat desertification, and halt and reverse land degradation and halt biodiversity loss",\n      "value": "Goal 15. Protect, restore and promote sustainable use of terrestrial ecosystems, sustainably manage forests, combat desertification, and halt and reverse land degradation and halt biodiversity loss",\n      "selected": true\n    }, {\n      "label": "Goal 16. Promote peaceful and inclusive societies for sustainable development, provide access to justice for all and build effective, accountable and inclusive institutions at all levels",\n      "value": "Goal 16. Promote peaceful and inclusive societies for sustainable development, provide access to justice for all and build effective, accountable and inclusive institutions at all levels",\n      "selected": true\n    }]\n  }\n}];\n/* harmony default export */ const data_filterData = (filterData);\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(45697);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n;// CONCATENATED MODULE: ./js/components/Toggle.jsx\nfunction Toggle_typeof(obj) { "@babel/helpers - typeof"; return Toggle_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Toggle_typeof(obj); }\nfunction Toggle_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Toggle_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction Toggle_createClass(Constructor, protoProps, staticProps) { if (protoProps) Toggle_defineProperties(Constructor.prototype, protoProps); if (staticProps) Toggle_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Toggle_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) Toggle_setPrototypeOf(subClass, superClass); }\nfunction Toggle_setPrototypeOf(o, p) { Toggle_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Toggle_setPrototypeOf(o, p); }\nfunction Toggle_createSuper(Derived) { var hasNativeReflectConstruct = Toggle_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Toggle_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Toggle_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Toggle_possibleConstructorReturn(this, result); }; }\nfunction Toggle_possibleConstructorReturn(self, call) { if (call && (Toggle_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return Toggle_assertThisInitialized(self); }\nfunction Toggle_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction Toggle_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction Toggle_getPrototypeOf(o) { Toggle_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Toggle_getPrototypeOf(o); }\n// ======================================================================================================\n\n//                                        COMPONENT NOTES\n\n// This component is built off boostraps toggle. The state has been built into the component, but doesn\'t \n// effect the ui. The ui changes in css checking the \'checked\' property. The state just toggles onChange \n// of the checkbox. \n\n// ======================================================================================================\n\n\n\nvar Toggle = /*#__PURE__*/function (_Component) {\n  Toggle_inherits(Toggle, _Component);\n  var _super = Toggle_createSuper(Toggle);\n  function Toggle(props) {\n    var _this;\n    Toggle_classCallCheck(this, Toggle);\n    _this = _super.call(this, props);\n    _this.state = {\n      toggle: false,\n      label: _this.props.labelOff,\n      customStyles: {\n        backgroundColor: _this.props.indicatorColour\n      }\n    };\n    _this.toggleTrigger = _this.toggleTrigger.bind(Toggle_assertThisInitialized(_this));\n    return _this;\n  }\n\n  // Function that adjusts state to open or close sidebar by adding or removing the "open" class\n  Toggle_createClass(Toggle, [{\n    key: "toggleTrigger",\n    value: function toggleTrigger() {\n      if (this.state.toggle === false) {\n        this.setState({\n          toggle: true,\n          label: this.props.labelOn\n        });\n      } else {\n        this.setState({\n          toggle: false,\n          label: this.props.labelOff\n        });\n      }\n      console.log(this.state.toggle);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      return /*#__PURE__*/react.createElement("div", {\n        className: ["toggle "] + this.props.className\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "custom-control custom-switch"\n      }, /*#__PURE__*/react.createElement("input", {\n        type: "checkbox",\n        checked: this.props.checked,\n        name: this.props.name,\n        value: this.props.value,\n        className: "custom-control-input",\n        onChange: (this.toggleTrigger, this.props.onChange),\n        id: this.props.id\n      }), /*#__PURE__*/react.createElement("label", {\n        className: "custom-control-label " + this.props.labelClass,\n        title: this.props.title,\n        htmlFor: this.props.id\n      }, this.state.label.replace(/(.{40})..+/, "$1...")), this.props.indicator && /*#__PURE__*/react.createElement("div", {\n        className: ["toggle--indicator "] + this.state.toggle,\n        style: this.state.toggle === true ? this.state.customStyles : null\n      })));\n    }\n  }]);\n  return Toggle;\n}(react.Component);\n\n;\nToggle.propTypes = {\n  /**\r\n   * Each item needs an item which defines units and allows individual switching\r\n   */\n  id: (prop_types_default()).number.isRequired,\n  /**\r\n   * Text for the toggle when it is turned on\r\n   */\n  labelOn: (prop_types_default()).string,\n  /**\r\n   * Text for the toggle when it is turned off\r\n   */\n  labelOff: (prop_types_default()).string\n};\n;// CONCATENATED MODULE: ./js/components/Codebook_Filter_Search.jsx\nfunction Codebook_Filter_Search_typeof(obj) { "@babel/helpers - typeof"; return Codebook_Filter_Search_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Codebook_Filter_Search_typeof(obj); }\nfunction Codebook_Filter_Search_createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = Codebook_Filter_Search_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }\nfunction Codebook_Filter_Search_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return Codebook_Filter_Search_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Codebook_Filter_Search_arrayLikeToArray(o, minLen); }\nfunction Codebook_Filter_Search_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction Codebook_Filter_Search_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Codebook_Filter_Search_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction Codebook_Filter_Search_createClass(Constructor, protoProps, staticProps) { if (protoProps) Codebook_Filter_Search_defineProperties(Constructor.prototype, protoProps); if (staticProps) Codebook_Filter_Search_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Codebook_Filter_Search_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) Codebook_Filter_Search_setPrototypeOf(subClass, superClass); }\nfunction Codebook_Filter_Search_setPrototypeOf(o, p) { Codebook_Filter_Search_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Codebook_Filter_Search_setPrototypeOf(o, p); }\nfunction Codebook_Filter_Search_createSuper(Derived) { var hasNativeReflectConstruct = Codebook_Filter_Search_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Codebook_Filter_Search_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Codebook_Filter_Search_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Codebook_Filter_Search_possibleConstructorReturn(this, result); }; }\nfunction Codebook_Filter_Search_possibleConstructorReturn(self, call) { if (call && (Codebook_Filter_Search_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return Codebook_Filter_Search_assertThisInitialized(self); }\nfunction Codebook_Filter_Search_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction Codebook_Filter_Search_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction Codebook_Filter_Search_getPrototypeOf(o) { Codebook_Filter_Search_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Codebook_Filter_Search_getPrototypeOf(o); }\n\n\n\n\nvar CodebookFilterModal = /*#__PURE__*/function (_Component) {\n  Codebook_Filter_Search_inherits(CodebookFilterModal, _Component);\n  var _super = Codebook_Filter_Search_createSuper(CodebookFilterModal);\n  function CodebookFilterModal(props) {\n    var _this;\n    Codebook_Filter_Search_classCallCheck(this, CodebookFilterModal);\n    _this = _super.call(this, props);\n    _this.state = {\n      modalVisible: false,\n      c88: data_filterData[0],\n      socr: data_filterData[1],\n      sdg: data_filterData[2],\n      searchFilterValue: "",\n      filterData: null,\n      criteriaChanged: false,\n      loader: false\n    };\n    return _this;\n  }\n  Codebook_Filter_Search_createClass(CodebookFilterModal, [{\n    key: "toggleModal",\n    value: function toggleModal() {\n      this.setState({\n        modalVisible: !this.state.modalVisible\n      });\n    }\n  }, {\n    key: "toggleParent",\n    value: function toggleParent(event, isSelected) {\n      var _this$setState;\n      var copyObj = this.state[event.target.name];\n      var filterName = event.target.name;\n      copyObj[filterName].parentSelected = !isSelected;\n      copyObj[filterName].children.forEach(function (child) {\n        return child.selected = !isSelected;\n      });\n\n      // set an empty array when all items selected\n      this.setState((_this$setState = {}, _defineProperty(_this$setState, this.state[filterName], []), _defineProperty(_this$setState, "criteriaChanged", true), _this$setState));\n    }\n  }, {\n    key: "toggleChild",\n    value: function toggleChild(event, index) {\n      var _this$setState2;\n      var copyObj = this.state[event.target.name];\n      var filterName = event.target.name;\n      copyObj[filterName].children[index].selected = !copyObj[filterName].children[index].selected;\n\n      // if the parent is selected, this will deselect it when toggling a child\n      if (copyObj[filterName].parentSelected === true) {\n        copyObj[filterName].parentSelected = false;\n      }\n\n      // backwards logic to toggle parent item to true if all children are selected\n      var deselectedChildren = copyObj[filterName].children.filter(function (child) {\n        return child.selected === false;\n      });\n      if (deselectedChildren.length === 0) {\n        copyObj[filterName].parentSelected = true;\n      }\n      this.setState((_this$setState2 = {}, _defineProperty(_this$setState2, this.state[filterName], copyObj), _defineProperty(_this$setState2, "criteriaChanged", true), _this$setState2));\n    }\n  }, {\n    key: "reset",\n    value: function reset() {\n      var copyC88 = this.state.c88;\n      var copySOCR = this.state.socr;\n      var copySDG = this.state.sdg;\n      this.deselectToggles(copyC88.c88);\n      this.deselectToggles(copySOCR.socr);\n      this.deselectToggles(copySDG.sdg);\n      this.setState({\n        c88: copyC88,\n        socr: copySOCR,\n        sdg: copySDG,\n        searchFilterValue: "",\n        criteriaChanged: false\n      });\n    }\n  }, {\n    key: "deselectToggles",\n    value: function deselectToggles(parentObj) {\n      parentObj.parentSelected = false;\n      var _iterator = Codebook_Filter_Search_createForOfIteratorHelper(parentObj.children),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var child = _step.value;\n          child.selected = false;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: "renderC88",\n    value: function renderC88() {\n      var _this2 = this;\n      return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {\n        className: "row",\n        style: {\n          color: \'#F73E55\',\n          fontFamily: \'Montserrat\',\n          fontSize: \'14px\',\n          fontWeight: \'bold\',\n          letterSpacing: \'0\',\n          lineHeight: \'20px\',\n          alignItems: \'flex-end\'\n        }\n      }, /*#__PURE__*/react.createElement(Toggle, {\n        type: "checkbox",\n        labelClass: "primary-label",\n        className: "primary-toggle",\n        name: "c88",\n        id: "C88Primary",\n        onChange: function onChange(event) {\n          return _this2.toggleParent(event, _this2.state.c88.c88.parentSelected);\n        },\n        value: this.state.c88.c88.parentSelected,\n        checked: this.state.c88.c88.parentSelected,\n        labelOff: this.state.c88.c88.label,\n        labelOn: this.state.c88.c88.label\n      })), this.state.c88.c88.children.map(function (childItem, index) {\n        return /*#__PURE__*/react.createElement(react.Fragment, {\n          key: index\n        }, /*#__PURE__*/react.createElement("div", {\n          className: "row toggle-switch-row",\n          key: index\n        }, /*#__PURE__*/react.createElement(Toggle, {\n          type: "checkbox",\n          id: index,\n          value: childItem.selected,\n          name: "c88",\n          checked: _this2.state.c88.c88.parentSelected || childItem.selected,\n          onChange: function onChange(event) {\n            _this2.toggleChild(event, index);\n          },\n          labelOff: childItem.label,\n          labelOn: childItem.label,\n          className: "secondary-toggle"\n        })));\n      }));\n    }\n  }, {\n    key: "renderSOCR",\n    value: function renderSOCR() {\n      var _this3 = this;\n      return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {\n        className: "row",\n        style: {\n          color: \'#EAB04B\',\n          fontFamily: \'Montserrat\',\n          fontSize: \'14px\',\n          fontWeight: \'bold\',\n          letterSpacing: \'0\',\n          lineHeight: \'20px\',\n          alignItems: \'flex-end\'\n        }\n      }, /*#__PURE__*/react.createElement(Toggle, {\n        type: "checkbox",\n        name: "socr",\n        id: "SOCRPrimary",\n        className: "primary-toggle",\n        labelClass: "primary-label",\n        onChange: function onChange(event) {\n          return _this3.toggleParent(event, _this3.state.socr.socr.parentSelected);\n        },\n        value: this.state.socr.socr.parentSelected,\n        checked: this.state.socr.socr.parentSelected,\n        labelOn: this.state.socr.socr.label,\n        labelOff: this.state.socr.socr.label\n      })), this.state.socr.socr.children.map(function (childItem, index) {\n        return /*#__PURE__*/react.createElement(react.Fragment, {\n          key: index\n        }, /*#__PURE__*/react.createElement("div", {\n          className: "row toggle-switch-row"\n        }, /*#__PURE__*/react.createElement(Toggle, {\n          type: "checkbox",\n          name: "socr",\n          id: "socr_" + index,\n          checked: _this3.state.socr.socr.parentSelected || childItem.selected,\n          onChange: function onChange(event) {\n            _this3.toggleChild(event, index);\n          },\n          labelOn: childItem.label,\n          labelOff: childItem.label,\n          className: "secondary-toggle"\n        })));\n      }));\n    }\n  }, {\n    key: "renderSDG",\n    value: function renderSDG() {\n      var _this4 = this;\n      return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement("div", {\n        className: "row",\n        style: {\n          color: \'#4F9DA6\',\n          fontFamily: \'Montserrat\',\n          fontSize: \'14px\',\n          fontWeight: \'bold\',\n          letterSpacing: \'0\',\n          lineHeight: \'20px\',\n          alignItems: \'flex-end\'\n        }\n      }, /*#__PURE__*/react.createElement(Toggle, {\n        type: "checkbox",\n        name: "sdg",\n        id: "SDGPrimary",\n        className: "primary-toggle",\n        labelClass: "primary-label",\n        onChange: function onChange(event) {\n          return _this4.toggleParent(event, _this4.state.sdg.sdg.parentSelected);\n        },\n        value: this.state.sdg.sdg.parentSelected,\n        checked: this.state.sdg.sdg.parentSelected,\n        labelOn: this.state.sdg.sdg.label,\n        labelOff: this.state.sdg.sdg.label\n      })), this.state.sdg.sdg.children.map(function (childItem, index) {\n        return /*#__PURE__*/react.createElement(react.Fragment, {\n          key: index\n        }, /*#__PURE__*/react.createElement("div", {\n          className: "row toggle-switch-row"\n        }, /*#__PURE__*/react.createElement(Toggle, {\n          type: "checkbox",\n          className: "secondary-toggle",\n          name: "sdg",\n          id: "sdg_" + index,\n          checked: _this4.state.sdg.sdg.parentSelected || childItem.selected,\n          onChange: function onChange(event) {\n            _this4.toggleChild(event, index);\n          },\n          labelOn: childItem.label,\n          labelOff: childItem.label,\n          title: childItem.label\n        })));\n      }));\n    }\n  }, {\n    key: "handleChange",\n    value: function handleChange(event) {\n      this.setState({\n        searchFilterValue: event.target.value\n      });\n    }\n  }, {\n    key: "transformFilterFields",\n    value: function transformFilterFields(children) {\n      // used to return an array of strings for the filter query\n      var selectedChildren = children.filter(function (child) {\n        return child.selected === true;\n      });\n      return selectedChildren.map(function (child) {\n        return child.value;\n      });\n    }\n  }, {\n    key: "submitForm",\n    value: function submitForm() {\n      var filterVal = {\n        c88: this.transformFilterFields(this.state.c88.c88.children),\n        socr: this.transformFilterFields(this.state.socr.socr.children),\n        sdg: this.transformFilterFields(this.state.sdg.sdg.children),\n        search: this.state.searchFilterValue\n      };\n      this.props.filter(filterVal);\n      this.setState({\n        loader: true\n      });\n      setTimeout(function () {\n        this.setState({\n          loader: false\n        });\n      }.bind(this), 1500);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this5 = this;\n      if (this.state.loader) {\n        return /*#__PURE__*/react.createElement(Modal/* default */.Z, {\n          id: "loader",\n          isOpen: this.state.loader,\n          className: "modal-dialog-centered loader"\n        }, /*#__PURE__*/react.createElement(ModalBody/* default */.Z, null, /*#__PURE__*/react.createElement("div", {\n          className: "row"\n        }, /*#__PURE__*/react.createElement("div", {\n          className: "col-2"\n        }), /*#__PURE__*/react.createElement("div", {\n          className: "col-0 ml-3 pt-4"\n        }, /*#__PURE__*/react.createElement(Spinner/* default */.Z, {\n          type: "grow",\n          color: "secondary",\n          size: "sm"\n        }), /*#__PURE__*/react.createElement(Spinner/* default */.Z, {\n          type: "grow",\n          color: "success",\n          size: "sm"\n        }), /*#__PURE__*/react.createElement(Spinner/* default */.Z, {\n          type: "grow",\n          color: "danger",\n          size: "sm"\n        }), /*#__PURE__*/react.createElement(Spinner/* default */.Z, {\n          type: "grow",\n          color: "warning",\n          size: "sm"\n        })), /*#__PURE__*/react.createElement("div", {\n          className: "col-0 pt-4 pl-4 float-left"\n        }, "Loading Content...")), /*#__PURE__*/react.createElement("br", null)));\n      }\n      return /*#__PURE__*/react.createElement(react.Fragment, null, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        className: "filter-toggle",\n        color: "danger",\n        onClick: function onClick() {\n          return _this5.toggleModal();\n        }\n      }, /*#__PURE__*/react.createElement("i", {\n        className: "fas fa-filter"\n      })), /*#__PURE__*/react.createElement(Modal/* default */.Z, {\n        className: "codebook-modal",\n        isOpen: this.state.modalVisible,\n        size: "lg",\n        backdrop: true,\n        toggle: function toggle() {\n          return _this5.toggleModal();\n        }\n      }, /*#__PURE__*/react.createElement(ModalBody/* default */.Z, {\n        style: {\n          padding: \'0px\'\n        }\n      }, /*#__PURE__*/react.createElement(Form/* default */.Z, null, /*#__PURE__*/react.createElement("div", {\n        className: "modal-container"\n      }, /*#__PURE__*/react.createElement(FormGroup/* default */.Z, null, /*#__PURE__*/react.createElement("div", {\n        style: {\n          padding: \'0 5%\'\n        }\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement("div", {\n        className: "modal-subtitle"\n      }, "Search"), /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement(Input/* default */.Z, {\n        value: this.state.searchFilterValue,\n        onChange: function onChange(e) {\n          return _this5.handleChange(e);\n        },\n        name: "searchFilter",\n        type: "text",\n        placeholder: "Search by name...",\n        className: "modal-search-bar"\n      }))), /*#__PURE__*/react.createElement("div", {\n        className: "row codebook-components-pull-right"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: ""\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        className: "modal-button cancel " + [this.state.criteriaChanged && " active"],\n        outline: true,\n        onClick: function onClick() {\n          return _this5.reset();\n        }\n      }, "Clear Search & Reset Filters")), /*#__PURE__*/react.createElement("div", {\n        className: ""\n      }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n        className: "modal-button filter " + [this.state.criteriaChanged && " active"],\n        outline: true,\n        onClick: function onClick() {\n          _this5.toggleModal();\n          _this5.submitForm();\n        }\n      }, "Apply Search & Filter"))), /*#__PURE__*/react.createElement("div", {\n        className: "pull-right"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "close",\n        onClick: function onClick() {\n          return _this5.toggleModal();\n        }\n      }, " "))))), /*#__PURE__*/react.createElement("hr", null), /*#__PURE__*/react.createElement("div", {\n        className: "filter-content-wrapper",\n        style: {\n          padding: \'0 5%\'\n        }\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "modal-subtitle"\n      }, "Filter")), /*#__PURE__*/react.createElement("div", {\n        className: "row filter-container-row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "col"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "themes-c88-border"\n      }), /*#__PURE__*/react.createElement("div", {\n        className: "toggle-subitem"\n      }, /*#__PURE__*/react.createElement(FormGroup/* default */.Z, null, this.renderC88()))), /*#__PURE__*/react.createElement("div", {\n        className: "col"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "themes-socr-border"\n      }), /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement("div", {\n        className: "toggle-subitem"\n      }, /*#__PURE__*/react.createElement(FormGroup/* default */.Z, null, this.renderSOCR())))), /*#__PURE__*/react.createElement("div", {\n        className: "col"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "themes-sdg-border"\n      }), /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement("div", {\n        className: "toggle-subitem"\n      }, /*#__PURE__*/react.createElement(FormGroup/* default */.Z, null, this.renderSDG())))))))))));\n    }\n  }]);\n  return CodebookFilterModal;\n}(react.Component);\n\n// EXTERNAL MODULE: ./node_modules/jquery/dist/jquery.js\nvar jquery = __webpack_require__(19755);\nvar jquery_default = /*#__PURE__*/__webpack_require__.n(jquery);\n;// CONCATENATED MODULE: ./js/components/Codebook.jsx\nfunction Codebook_typeof(obj) { "@babel/helpers - typeof"; return Codebook_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, Codebook_typeof(obj); }\nfunction Codebook_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction Codebook_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction Codebook_createClass(Constructor, protoProps, staticProps) { if (protoProps) Codebook_defineProperties(Constructor.prototype, protoProps); if (staticProps) Codebook_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction Codebook_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) Codebook_setPrototypeOf(subClass, superClass); }\nfunction Codebook_setPrototypeOf(o, p) { Codebook_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Codebook_setPrototypeOf(o, p); }\nfunction Codebook_createSuper(Derived) { var hasNativeReflectConstruct = Codebook_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Codebook_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Codebook_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Codebook_possibleConstructorReturn(this, result); }; }\nfunction Codebook_possibleConstructorReturn(self, call) { if (call && (Codebook_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return Codebook_assertThisInitialized(self); }\nfunction Codebook_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction Codebook_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction Codebook_getPrototypeOf(o) { Codebook_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Codebook_getPrototypeOf(o); }\n\n\n\n\n\n\n\nvar Codebook = /*#__PURE__*/function (_Component) {\n  Codebook_inherits(Codebook, _Component);\n  var _super = Codebook_createSuper(Codebook);\n  function Codebook(props) {\n    var _this;\n    Codebook_classCallCheck(this, Codebook);\n    _this = _super.call(this, props);\n    _this.state = {\n      selected: null,\n      loader: false,\n      filterData: null\n    };\n    _this.setSelected = _this.setSelected.bind(Codebook_assertThisInitialized(_this));\n    _this.filterData = _this.filterData.bind(Codebook_assertThisInitialized(_this));\n    _this.scrollToAnchor = _this.scrollToAnchor.bind(Codebook_assertThisInitialized(_this));\n    return _this;\n  }\n  Codebook_createClass(Codebook, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      this.showLoader();\n      this.getFirstChildItem();\n      this.scrollToAnchor(\'content-scoda\', \'html,body\', true);\n    }\n  }, {\n    key: "scrollToAnchor",\n    value: function scrollToAnchor(id, scrollElement, animate) {\n      // Set the anchor\n      var to = jquery_default()(\'#\' + id);\n      // Animate or jump scrollElement to anchor point\n      if (animate) {\n        jquery_default()(scrollElement).animate({\n          scrollTop: to.offset().top\n        }, \'fast\');\n      } else {\n        jquery_default()(scrollElement).scrollTop(to.offset().top);\n      }\n      console.log(\'scroll function run\');\n    }\n  }, {\n    key: "setSelected",\n    value: function setSelected(childItem) {\n      this.setState({\n        selected: childItem\n      });\n    }\n  }, {\n    key: "showLoader",\n    value: function showLoader() {\n      this.setState({\n        loader: true\n      });\n    }\n  }, {\n    key: "hideLoader",\n    value: function hideLoader() {\n      this.setState({\n        loader: false\n      });\n    }\n  }, {\n    key: "filterData",\n    value: function filterData(filters) {\n      this.setState({\n        filterData: filters\n      });\n    }\n  }, {\n    key: "getFirstChildItem",\n    value: function getFirstChildItem() {\n      var _this2 = this;\n      axios_default().get(\'/api/codebook/1\').then(function (res) {\n        var firstItem = res.data.slice(1, 2);\n        _this2.setState({\n          selected: firstItem[0].children[0]\n        });\n        _this2.hideLoader();\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      if (this.state.loader) {\n        return /*#__PURE__*/react.createElement(Modal/* default */.Z, {\n          id: "loader",\n          isOpen: this.state.loader,\n          className: "modal-dialog-centered loader"\n        }, /*#__PURE__*/react.createElement(ModalBody/* default */.Z, null, /*#__PURE__*/react.createElement("div", {\n          className: "row"\n        }, /*#__PURE__*/react.createElement("div", {\n          className: "col-2"\n        }), /*#__PURE__*/react.createElement("div", {\n          className: "col-0 ml-3 pt-4"\n        }, /*#__PURE__*/react.createElement(Spinner/* default */.Z, {\n          type: "grow",\n          color: "secondary",\n          size: "sm"\n        }), /*#__PURE__*/react.createElement(Spinner/* default */.Z, {\n          type: "grow",\n          color: "success",\n          size: "sm"\n        }), /*#__PURE__*/react.createElement(Spinner/* default */.Z, {\n          type: "grow",\n          color: "danger",\n          size: "sm"\n        }), /*#__PURE__*/react.createElement(Spinner/* default */.Z, {\n          type: "grow",\n          color: "warning",\n          size: "sm"\n        })), /*#__PURE__*/react.createElement("div", {\n          className: "col-0 pt-4 pl-4 float-left"\n        }, "Loading Content...")), /*#__PURE__*/react.createElement("br", null)));\n      }\n      return /*#__PURE__*/react.createElement(Container/* default */.Z, {\n        fluid: true,\n        className: "codebook-components",\n        style: {\n          leftPadding: \'0px\'\n        }\n      }, /*#__PURE__*/react.createElement(CodebookFilterModal, {\n        filter: this.filterData\n      }), /*#__PURE__*/react.createElement(Row/* default */.Z, null, /*#__PURE__*/react.createElement(Col/* default */.Z, {\n        xs: "12",\n        sm: "12",\n        md: "12",\n        lg: "8",\n        className: "no-padding"\n      }, /*#__PURE__*/react.createElement(CodebookDatatable, {\n        codes: this.state.codes,\n        setSelectedChild: this.setSelected,\n        filteredData: this.state.filterData\n      })), /*#__PURE__*/react.createElement(Col/* default */.Z, {\n        xs: "12",\n        sm: "12",\n        md: "12",\n        lg: "4",\n        className: "no-padding"\n      }, /*#__PURE__*/react.createElement(CodebookSidebar, {\n        codes: this.state.codes,\n        data: this.state.selected\n      }))));\n    }\n  }]);\n  return Codebook;\n}(react.Component);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///80443\n')}}]);