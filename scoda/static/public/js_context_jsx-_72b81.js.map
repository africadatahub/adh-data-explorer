{"version":3,"file":"js_context_jsx-_72b81.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACT;AACK;AAE9B,IAAMI,aAAa,gBAAGD,oDAAa,CAAC,IAAI,CAAC;AACzC,IAAME,mBAAmB,gBAAGF,oDAAa,CAAC,IAAI,CAAC;AAC/C,IAAMG,cAAc,gBAAGH,oDAAa,CAAC,IAAI,CAAC;AAE1C,IAAMI,aAAa,GAAG,SAAhBA,aAAa,GAAS;EAC/B,OAAON,iDAAU,CAACG,aAAa,CAAC;AACpC,CAAC;AAEM,IAAMI,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAEhC,OAAOP,iDAAU,CAACI,mBAAmB,CAAC;AAC1C,CAAC;AAEM,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiB,GAAS;EAEnC,OAAOR,iDAAU,CAACK,cAAc,CAAC;AACrC,CAAC;AAIM,IAAMI,kBAAkB,GAAG,SAArBA,kBAAkB,OAAqB;EAAA,IAAfC,QAAQ,QAARA,QAAQ;EAEzC,gBAAgCT,+CAAQ,CAAC,KAAK,CAAC;IAAA;IAAxCU,UAAU;IAAEC,SAAS;EAC5B,iBAAyBX,+CAAQ,CAAC,CAAC;MAAEY,WAAW,EAAE;IAAM,CAAC,EAAE;MAAEA,WAAW,EAAE;IAAM,CAAC,EAAE;MAAEA,WAAW,EAAE;IAAM,CAAC,EAAE;MAAEA,WAAW,EAAE;IAAM,CAAC,EAAE;MAAEA,WAAW,EAAE;IAAM,CAAC,EAAE;MAAEA,WAAW,EAAE;IAAM,CAAC,CAAC,CAAC;IAAA;IAA5KC,KAAK;IAACC,QAAQ;EAGrB,IAAMC,aAAa,GAAG,SAAhBA,aAAa,GAAS;IACxB,IAAIL,UAAU,EAAE;MAEZC,SAAS,CAAC,KAAK,CAAC;IACpB;EACJ,CAAC;EAED,oBAAO,iDAAC,aAAa,CAAC,QAAQ;IAAC,KAAK,EAAE;MAAED,UAAU,EAAVA,UAAU;MAAEC,SAAS,EAATA;IAAU;EAAE,gBAC5D,iDAAC,mBAAmB,CAAC,QAAQ;IAAC,KAAK,EAAEI;EAAc,gBAC/C,iDAAC,cAAc,CAAC,QAAQ;IAAC,KAAK,EAAE;MAACF,KAAK,EAALA,KAAK;MAACC,QAAQ,EAARA;IAAQ;EAAE,GAChDL,QAAQ,CACiB,CACC,CAEV;AAC7B,CAAC","sources":["webpack://ocl_bb_library/./js/context.jsx"],"sourcesContent":["import React, { useContext } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { createContext } from \"react\"\r\n\r\nexport const SelectContext = createContext(null)\r\nexport const CloseDropdownGlobal = createContext(null)\r\nexport const CloseAllErrors = createContext(null)\r\n\r\nexport const useSelectOpen = () => {\r\n    return useContext(SelectContext)\r\n}\r\n\r\nexport const useGlobalClose = () => {\r\n\r\n    return useContext(CloseDropdownGlobal)\r\n}\r\n\r\nexport const useCloseAllErrors = () => {\r\n\r\n    return useContext(CloseAllErrors)\r\n}\r\n\r\n\r\n\r\nexport const SelectContextState = ({ children }) => {\r\n\r\n    const [selectOpen, setSelect] = useState(false)\r\n    const [error,setError] = useState([{ errorThrown: false }, { errorThrown: false }, { errorThrown: false }, { errorThrown: false }, { errorThrown: false }, { errorThrown: false }])\r\n\r\n\r\n    const closeGlobally = () => {\r\n        if (selectOpen) {\r\n\r\n            setSelect(false)\r\n        }\r\n    }\r\n   \r\n    return <SelectContext.Provider value={{ selectOpen, setSelect }}>\r\n        <CloseDropdownGlobal.Provider value={closeGlobally}>\r\n            <CloseAllErrors.Provider value={{error,setError}}>\r\n            {children}\r\n            </CloseAllErrors.Provider>\r\n        </CloseDropdownGlobal.Provider>\r\n\r\n    </SelectContext.Provider>\r\n}"],"names":["React","useContext","useState","createContext","SelectContext","CloseDropdownGlobal","CloseAllErrors","useSelectOpen","useGlobalClose","useCloseAllErrors","SelectContextState","children","selectOpen","setSelect","errorThrown","error","setError","closeGlobally"],"sourceRoot":""}