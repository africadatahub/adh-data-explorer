"use strict";(self.webpackChunkocl_bb_library=self.webpackChunkocl_bb_library||[]).push([[3407],{23407:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ DataStoriesEPW)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./js/components/DataStories.Navigation.jsx\nvar DataStories_Navigation = __webpack_require__(5026);\n// EXTERNAL MODULE: ./node_modules/react-chartjs-2/es/index.js\nvar es = __webpack_require__(46799);\n// EXTERNAL MODULE: ./node_modules/chart.js/dist/Chart.js\nvar Chart = __webpack_require__(17757);\nvar Chart_default = /*#__PURE__*/__webpack_require__.n(Chart);\n// EXTERNAL MODULE: ./node_modules/react-select2-wrapper/lib/components/Select2.js\nvar Select2 = __webpack_require__(92787);\nvar Select2_default = /*#__PURE__*/__webpack_require__.n(Select2);\n// EXTERNAL MODULE: ./node_modules/react-select2-wrapper/css/select2.css\nvar select2 = __webpack_require__(11938);\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(45697);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n;// CONCATENATED MODULE: ./js/components/Select.jsx\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n// import Label from \'./Label\';\n// import HelperText from \'./HelperText\';\n\n\n// NOTICE\n// This component makes use of the SELECT2 plugin, of which we\'re using the react wrapper found at https://github.com/rkit/react-select2-wrapper\n// The width is set using this variable, which is accessed through inline styles below\nvar width = 100;\n\n// const data = [\'bug\', \'feature\', \'documents\', \'discussion\']; // Dummy data\nvar Select = /*#__PURE__*/function (_Component) {\n  _inherits(Select, _Component);\n  var _super = _createSuper(Select);\n  function Select() {\n    _classCallCheck(this, Select);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Select, [{\n    key: "render",\n    value: function render() {\n      var _React$createElement;\n      return /*#__PURE__*/react.createElement("div", null, /*#__PURE__*/react.createElement((Select2_default()), (_React$createElement = {\n        multiple: this.props.multiple,\n        data: this.props.data // For true data\n        // data={data} // For dummy data\n        ,\n        name: this.props.name,\n        id: this.props.id,\n        className: ["select "] + this.props.className,\n        disabled: this.props.disabled,\n        onChange: this.props.onChange\n      }, _defineProperty(_React$createElement, "name", this.props.name), _defineProperty(_React$createElement, "value", this.props.value), _defineProperty(_React$createElement, "required", true), _defineProperty(_React$createElement, "options", {\n        placeholder: this.props.placeholder,\n        width: width + \'%\'\n      }), _React$createElement)));\n    }\n  }]);\n  return Select;\n}(react.Component);\n\n;\nSelect.propTypes = {\n  /**\r\n   * Select whether this is a multi-select or not\r\n   */\n  multiple: (prop_types_default()).bool,\n  /**\r\n   * Enter text for placeholder\r\n   */\n  placeholder: (prop_types_default()).string,\n  /**\r\n   * Enter text for label\r\n   */\n  label: (prop_types_default()).string,\n  /**\r\n   * Enter text for helper text below the component\r\n   */\n  helperText: (prop_types_default()).string,\n  /**\r\n   * Add custom classes\r\n   */\n  className: (prop_types_default()).string,\n  /**\r\n   * Disable or enable the component\r\n   */\n  disabled: (prop_types_default()).bool,\n  /**\r\n   * Activate or deactivate the error state \r\n   */\n  error: (prop_types_default()).bool,\n  /**\r\n   * State whether input is required or not\r\n   */\n  required: (prop_types_default()).bool,\n  /**\r\n   * Wire up data to the component in the form of an object\r\n   */\n  data: (prop_types_default()).object\n};\n// EXTERNAL MODULE: ./js/components/Image.jsx\nvar Image = __webpack_require__(6214);\n// EXTERNAL MODULE: ./js/components/DataStories.Content.Card.Header.jsx\nvar DataStories_Content_Card_Header = __webpack_require__(9820);\n// EXTERNAL MODULE: ./js/components/DataStories.Content.Card.HighlightBlock.jsx\nvar DataStories_Content_Card_HighlightBlock = __webpack_require__(19720);\n// EXTERNAL MODULE: ./js/components/DataStories.Content.Card.ContentBlock.jsx\nvar DataStories_Content_Card_ContentBlock = __webpack_require__(62979);\n// EXTERNAL MODULE: ./js/components/DataStories.Content.Card.Data.Information.jsx\nvar DataStories_Content_Card_Data_Information = __webpack_require__(47701);\n;// CONCATENATED MODULE: ./js/components/DataStories.Content.Card.EPW.jsx\nfunction DataStories_Content_Card_EPW_typeof(obj) { "@babel/helpers - typeof"; return DataStories_Content_Card_EPW_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, DataStories_Content_Card_EPW_typeof(obj); }\nfunction DataStories_Content_Card_EPW_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction DataStories_Content_Card_EPW_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction DataStories_Content_Card_EPW_createClass(Constructor, protoProps, staticProps) { if (protoProps) DataStories_Content_Card_EPW_defineProperties(Constructor.prototype, protoProps); if (staticProps) DataStories_Content_Card_EPW_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction DataStories_Content_Card_EPW_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) DataStories_Content_Card_EPW_setPrototypeOf(subClass, superClass); }\nfunction DataStories_Content_Card_EPW_setPrototypeOf(o, p) { DataStories_Content_Card_EPW_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return DataStories_Content_Card_EPW_setPrototypeOf(o, p); }\nfunction DataStories_Content_Card_EPW_createSuper(Derived) { var hasNativeReflectConstruct = DataStories_Content_Card_EPW_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = DataStories_Content_Card_EPW_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = DataStories_Content_Card_EPW_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return DataStories_Content_Card_EPW_possibleConstructorReturn(this, result); }; }\nfunction DataStories_Content_Card_EPW_possibleConstructorReturn(self, call) { if (call && (DataStories_Content_Card_EPW_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return DataStories_Content_Card_EPW_assertThisInitialized(self); }\nfunction DataStories_Content_Card_EPW_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction DataStories_Content_Card_EPW_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction DataStories_Content_Card_EPW_getPrototypeOf(o) { DataStories_Content_Card_EPW_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return DataStories_Content_Card_EPW_getPrototypeOf(o); }\n\n\n\n\n\n\n\n\n\nvar mydata = {\n  pl: {\n    id: "my-select",\n    multiple: false,\n    data: [\'Buffalo City\', \'Cape Town\', \'JHB\', \'Tswane\', \'Ekurhuleni\', \'eThekwini\', \'Mangaung\', \'Msunduzi\', \'NMB\']\n  }\n};\nvar buffalo = [566, 645, 1266, 1857, 2307];\nvar cpt = [27876, 38574, 9510, 21317, 25389];\nvar jhb = [23603, 26932, 5734, 14599, 12468];\nvar tswane = [17790, 34639, 5204, 9096, 9820];\nvar ethekwini = [29838, 28962, 13016, 14948, 20508];\nvar ekh = [6005, 8434, 7420, 8412, 5081];\nvar mangaung = [1687, 3031, 2958, 1208, 627];\nvar msunduzi = [1451, 1595, 1393, 779, 1813];\nvar nhb = [5068, 6390, 1229, 2431, 4899];\nvar DataStoriesContentCardEPW = /*#__PURE__*/function (_Component) {\n  DataStories_Content_Card_EPW_inherits(DataStoriesContentCardEPW, _Component);\n  var _super = DataStories_Content_Card_EPW_createSuper(DataStoriesContentCardEPW);\n  function DataStoriesContentCardEPW(props) {\n    var _this;\n    DataStories_Content_Card_EPW_classCallCheck(this, DataStoriesContentCardEPW);\n    _this = _super.call(this, props);\n    _this.pie_data = {\n      labels: ["Professionals", "Service & sales workers ", "Plant & machine operators & assemblers", "Technicians & associate professionals", "Clerical support workers", "Elementary occupations", "Managers", "Skilled agricultural, forestry, fishery, craft & related trades workers"],\n      datasets: [{\n        label: \'2016\',\n        data: [58, 2, 0, 18, 6, 1, 13, 2],\n        fill: false,\n        // Prevents line graph fill, while keeping legend box fill --\x3e\n        backgroundColor: [\'rgba(121, 169, 182, 1)\', \'rgba(240, 147, 65, 1)\', \'rgba(107, 111, 156, 1)\', \'rgba(117, 43, 38, 1)\', \'rgba(78, 127, 185, 1)\', \'rgba(186, 77, 83, 1)\', \'rgba(153, 185, 86, 1)\', \'rgba(35, 78, 122, 1)\'],\n        borderColor: [\'rgba(121, 169, 182, 1)\', \'rgba(240, 147, 65, 1)\', \'rgba(107, 111, 156, 1)\', \'rgba(117, 43, 38, 1)\', \'rgba(78, 127, 185, 1)\', \'rgba(186, 77, 83, 1)\', \'rgba(153, 185, 86, 1)\', \'rgba(35, 78, 122, 1)\']\n      }]\n    };\n    _this.state = {\n      place: "",\n      data: []\n    };\n    _this.place = _this.place.bind(DataStories_Content_Card_EPW_assertThisInitialized(_this));\n    return _this;\n  }\n  DataStories_Content_Card_EPW_createClass(DataStoriesContentCardEPW, [{\n    key: "place",\n    value: function place(e) {\n      this.setState({\n        place: e.target.value\n      });\n      if (e.target.value === \'Buffalo City\') {\n        this.setState({\n          data: buffalo\n        });\n      }\n      if (e.target.value === \'Cape Town\') {\n        this.setState({\n          data: cpt\n        });\n      }\n      if (e.target.value === \'JHB\') {\n        this.setState({\n          data: jhb\n        });\n      }\n      if (e.target.value === \'Tswane\') {\n        this.setState({\n          data: tswane\n        });\n      }\n      if (e.target.value === \'Ekurhuleni\') {\n        this.setState({\n          data: ekh\n        });\n      }\n      if (e.target.value === \'eThekwini\') {\n        this.setState({\n          data: ethekwini\n        });\n      }\n      if (e.target.value === \'Mangaung\') {\n        this.setState({\n          data: mangaung\n        });\n      }\n      if (e.target.value === \'Msunduzi\') {\n        this.setState({\n          data: msunduzi\n        });\n      }\n      if (e.target.value === \'NMB\') {\n        this.setState({\n          data: nhb\n        });\n      }\n    }\n  }, {\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      this.setState({\n        data: buffalo\n      });\n      (Chart_default()).platform.disableCSSInjection = true;\n      this.renderChart();\n      this.renderChart2();\n      this.renderChart3();\n      this.renderChart3_mobile();\n    }\n  }, {\n    key: "componentDidUpdate",\n    value: function componentDidUpdate() {\n      this.renderChart3_mobile();\n    }\n  }, {\n    key: "renderChart",\n    value: function renderChart() {\n      var chartRef = document.getElementById(\'mainChart\').getContext(\'2d\');\n      new (Chart_default())(chartRef, {\n        type: \'pie\',\n        data: {\n          labels: ["Professionals", "Service & sales workers ", "Plant & machine operators & assemblers", "Technicians & associate professionals", "Clerical support workers", "Elementary occupations", "Managers", "Skilled agricultural, forestry, fishery, craft & related trades workers"],\n          datasets: [{\n            label: \'2016\',\n            data: [58, 2, 0, 18, 6, 1, 13, 2],\n            fill: false,\n            // Prevents line graph fill, while keeping legend box fill --\x3e\n            backgroundColor: [\'rgba(121, 169, 182, 1)\', \'rgba(240, 147, 65, 1)\', \'rgba(107, 111, 156, 1)\', \'rgba(117, 43, 38, 1)\', \'rgba(78, 127, 185, 1)\', \'rgba(186, 77, 83, 1)\', \'rgba(153, 185, 86, 1)\', \'rgba(35, 78, 122, 1)\'],\n            borderColor: [\'rgba(121, 169, 182, 1)\', \'rgba(240, 147, 65, 1)\', \'rgba(107, 111, 156, 1)\', \'rgba(117, 43, 38, 1)\', \'rgba(78, 127, 185, 1)\', \'rgba(186, 77, 83, 1)\', \'rgba(153, 185, 86, 1)\', \'rgba(35, 78, 122, 1)\']\n          }]\n        },\n        options: {\n          responsive: true,\n          legend: {\n            display: true,\n            position: \'right\',\n            labels: {\n              fontFamily: "Montserrat"\n            }\n          },\n          elements: {\n            line: {\n              tension: 0\n            },\n            point: {\n              radius: 0\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: "renderChart2",\n    value: function renderChart2() {\n      var chartRef = document.getElementById(\'mainChart2\').getContext(\'2d\');\n      new (Chart_default())(chartRef, {\n        type: \'bar\',\n        data: {\n          labels: ["Phase I", "Phase II", "Phase III"],\n          datasets: [{\n            label: \'WO Target\',\n            stack: \'Stack 0\',\n            data: [1000000, 4500000, 6000000],\n            backgroundColor: [\'rgba(253, 184, 99, 1)\', \'rgba(253, 184, 99, 1)\', \'rgba(253, 184, 99, 1)\'],\n            borderColor: [\'rgba(253, 184, 99, 1)\', \'rgba(253, 184, 99, 1)\', \'rgba(253, 184, 99, 1)\']\n          }, {\n            label: "WO\'s Created",\n            stack: \'Stack 1\',\n            data: [1000000, 4900000, 3525002],\n            backgroundColor: [\'rgba(230, 97, 1, 1)\', \'rgba(230, 97, 1, 1)\', \'rgba(230, 97, 1, 1)\'],\n            borderColor: [\'rgba(230, 97, 1, 1)\', \'rgba(230, 97, 1, 1)\', \'rgba(230, 97, 1, 1)\']\n          }]\n        },\n        options: {\n          scales: {\n            tooltips: {\n              mode: \'index\',\n              intercept: false,\n              callbacks: {\n                label: function label(tooltipItem, data) {\n                  var label = data.datasets[tooltipItem.datasetIndex].label || \'\';\n                  if (label) {\n                    label += \': \';\n                  }\n                  label += Math.round(tooltipItem.yLabel * 100) / 100;\n                  return label;\n                }\n              }\n            },\n            maintainAspectRatio: false,\n            xAxes: [{\n              stacked: false,\n              ticks: {\n                fontStyle: \'bold\'\n              },\n              gridLines: {\n                borderDash: [2],\n                zeroLineBorderDash: [],\n                zeroLineWidth: 2,\n                lineWidth: 2,\n                color: [0, 0, 0],\n                drawTicks: true\n              }\n            }],\n            yAxes: [{\n              stacked: false,\n              ticks: {\n                callback: function callback(value, index, values) {\n                  return Math.round(value * 100) / 100 + \'\';\n                },\n                suggestedMin: 0,\n                scaleSteps: 1500000\n              },\n              gridLines: {\n                drawTicks: false\n              },\n              scaleLabel: {\n                display: true\n              }\n            }]\n          },\n          legend: {\n            display: true\n          },\n          elements: {\n            line: {\n              tension: 0\n            },\n            point: {\n              radius: 0\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: "renderChart3",\n    value: function renderChart3() {\n      var chartRef = document.getElementById(\'mainChart3\').getContext(\'2d\');\n      new (Chart_default())(chartRef, {\n        type: \'bar\',\n        data: {\n          labels: ["Buffalo City", "Cape Town", "JHB", "Tswane", "Ekurhuleni", "eThekwini", "Mangaung", "Msunduzi", "NMB", "Average"],\n          datasets: [{\n            label: \'2013/14\',\n            stack: \'Stack 1\',\n            data: [566, 27876, 23603, 17790, 6005, 29838, 1687, 1451, 5068, 12654],\n            backgroundColor: [\'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\'],\n            borderColor: [\'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\']\n          }, {\n            label: \'2014/15\',\n            stack: \'Stack 2\',\n            data: [645, 38574, 26932, 34639, 8434, 28962, 3031, 1595, 6390, 16578],\n            backgroundColor: [\'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\'],\n            borderColor: [\'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\']\n          }, {\n            label: \'2015/16\',\n            stack: \'Stack 3\',\n            data: [1266, 9510, 5734, 5204, 7420, 13016, 2958, 1393, 1229, 5303],\n            backgroundColor: [\'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\'],\n            borderColor: [\'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\']\n          }, {\n            label: \'2016/17\',\n            stack: \'Stack 4\',\n            data: [1857, 21317, 14559, 9096, 8412, 14948, 1208, 779, 2431, 8290],\n            backgroundColor: [\'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\'],\n            borderColor: [\'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\']\n          }, {\n            label: \'2017/18\',\n            stack: \'Stack 5\',\n            data: [2307, 25389, 12468, 9820, 5081, 20508, 627, 1813, 4899, 9212],\n            backgroundColor: [\'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\'],\n            borderColor: [\'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\']\n          }]\n        },\n        options: {\n          title: {\n            display: false,\n            text: \'Title\'\n          },\n          tooltips: {\n            mode: \'index\',\n            intercept: false,\n            callbacks: {\n              label: function label(tooltipItem, data) {\n                var label = data.datasets[tooltipItem.datasetIndex].label || \'\';\n                if (label) {\n                  label += \': \';\n                }\n                label += Math.round(tooltipItem.yLabel * 100) / 100;\n                return label;\n              }\n            }\n          },\n          responsive: true,\n          scales: {\n            xAxes: [{\n              stacked: true,\n              ticks: {\n                fontStyle: \'bold\'\n              },\n              gridLines: {\n                borderDash: [2],\n                zeroLineBorderDash: [],\n                zeroLineWidth: 2,\n                lineWidth: 2,\n                color: [0, 0, 0],\n                drawTicks: true\n              }\n            }],\n            yAxes: [{\n              stacked: true,\n              ticks: {\n                callback: function callback(value, index, values) {\n                  return Math.round(value * 100) / 100 + \'  \';\n                }\n              },\n              gridLines: {\n                drawTicks: false\n              },\n              scaleLabel: {\n                display: true,\n                labelString: "Number of WO\'s",\n                fontStyle: \'bold\',\n                fontFamily: "Montserrat",\n                fontSize: 15\n              }\n            }]\n          }\n        }\n      });\n    }\n  }, {\n    key: "renderChart3_mobile",\n    value: function renderChart3_mobile() {\n      var chartRef = document.getElementById(\'mainChart3_mobile\').getContext(\'2d\');\n      new (Chart_default())(chartRef, {\n        type: \'bar\',\n        data: {\n          labels: [this.state.place, "Average"],\n          datasets: [{\n            label: \'2013/14\',\n            stack: \'Stack 1\',\n            data: [this.state.data[0], 12654],\n            backgroundColor: [\'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\'],\n            borderColor: [\'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\', \'rgba(68, 114, 196, 1)\']\n          }, {\n            label: \'2014/15\',\n            stack: \'Stack 2\',\n            data: [this.state.data[1], 16578],\n            backgroundColor: [\'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\'],\n            borderColor: [\'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\', \'rgb(203, 147, 109, 1)\']\n          }, {\n            label: \'2015/16\',\n            stack: \'Stack 3\',\n            data: [this.state.data[2], 5303],\n            backgroundColor: [\'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\'],\n            borderColor: [\'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\', \'rgba(167, 167, 167, 1)\']\n          }, {\n            label: \'2016/17\',\n            stack: \'Stack 4\',\n            data: [this.state.data[3], 8290],\n            backgroundColor: [\'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\'],\n            borderColor: [\'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\', \'rgba(212, 181, 85, 1)\']\n          }, {\n            label: \'2017/18\',\n            stack: \'Stack 5\',\n            data: [this.state.data[4], 9212],\n            backgroundColor: [\'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\'],\n            borderColor: [\'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\', \'rgba(91, 155, 213, 1)\']\n          }]\n        },\n        options: {\n          title: {\n            display: false,\n            text: \'Title\'\n          },\n          tooltips: {\n            mode: \'index\',\n            intercept: false,\n            callbacks: {\n              label: function label(tooltipItem, data) {\n                var label = data.datasets[tooltipItem.datasetIndex].label || \'\';\n                if (label) {\n                  label += \': \';\n                }\n                label += Math.round(tooltipItem.yLabel * 100) / 100;\n                return label;\n              }\n            }\n          },\n          responsive: true,\n          scales: {\n            xAxes: [{\n              stacked: true,\n              ticks: {\n                fontStyle: \'bold\'\n              },\n              gridLines: {\n                borderDash: [2],\n                zeroLineBorderDash: [],\n                zeroLineWidth: 2,\n                lineWidth: 2,\n                color: [0, 0, 0],\n                drawTicks: true\n              }\n            }],\n            yAxes: [{\n              stacked: true,\n              ticks: {\n                callback: function callback(value, index, values) {\n                  return Math.round(value / 1000) + \'K  \';\n                }\n              },\n              gridLines: {\n                drawTicks: false\n              },\n              scaleLabel: {\n                display: true,\n                labelString: "Number of WO\'s",\n                fontStyle: \'bold\',\n                fontFamily: "Montserrat",\n                fontSize: 15\n              }\n            }]\n          }\n        }\n      });\n    }\n  }, {\n    key: "downloadChart",\n    value: function downloadChart() {\n      var url_base64jp = document.getElementById("mainChart").toDataURL("image/png");\n      var a = document.getElementById("download");\n      a.href = url_base64jp;\n    }\n  }, {\n    key: "downloadChart2",\n    value: function downloadChart2() {\n      var url_base64jp = document.getElementById("mainChart2").toDataURL("image/png");\n      var a = document.getElementById("download2");\n      a.href = url_base64jp;\n    }\n  }, {\n    key: "downloadChart3",\n    value: function downloadChart3() {\n      var url_base64jp = document.getElementById("mainChart3").toDataURL("image/png");\n      var a = document.getElementById("download3");\n      a.href = url_base64jp;\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var contentBlockOne = "The EPWP has created over 3.5 million work opportunities for the unemployed nationally, with a targeted 6 million work opportunities for Phase 3 (2014-2019).\\n            <br/><br/>\\n        In the period 2017/18, the South African cities have implemented 1448 EPWP projects that have created over 90 thousand work opportunities in their cities. \\n        <br/><br/>\\n        These projects provide poverty relief for the poor and the large number of unemployed economic immigrants that move to the city to seek employment.";\n      var contentBlockTwo = "<ul style=\\"margin-left:2%\\">\\n            <li>There is a mismatch in the job supply and demand in South Africa</li>\\n            <li>The country\\u2019s economy isn\\u2019t creating jobs for the available labour force</li>\\n            <li>The EPWP is an important programme that creates employment opportunities for the poor and unemployed unskilled and semi-skilled people in the country</li>\\n            <li>More programmes like the EPWP will be required if jobs are not created for the available labour force of the country, especially with;\\n                <ol type=\\"a\\">\\n                    <li>job losses in the agricultural and mining sector and </li>\\n                    <li>the industrial revolution that requires a new kind of skillset from the labour force.</li>\\n                </ol>\\n            </li>\\n        </ul>";\n      var resources = " <ul style=\\"margin-left:2%;\\">\\n        <li>Where can I read the full report? See the <a href=\\"https://www.sacities.net/the-state-of-the-expanded-public-works-programme-annual-report-2017-2018\\">SACN</a> website</li>\\n        <li>Download and analyse data at the <a href=\\"/\\">SCODA</a> webpage</li>\\n        <li>Are there events I can join?\\n            <ul style=\\"margin-left:1%;list-style-type: none;\\">\\n                <li className=\\"dash\\">- Launch of the State of the Expanded Public Works Programme in South African Cities 2017/18, Report Launch\\n                <br>06 June 2019\\n                <br>Joburg Metro Building\\n                </li>\\n            </ul>\\n        </li>\\n        <li>What other publications should I be reading on this topic?\\n            <ul style=\\"margin-left:1%;list-style-type: none;\\">\\n                <li className=\\"dash\\">- <a href=\\"\\">Economic Trends and Signals for Public Employment Programmes in South African Cities</a></li>\\n            </ul>\\n        </li>\\n    </ul>\\n    <br/>\\n        If you have any queries and further comment on this datastory, please email <a href=\\"mailto:sadhna@sacities.net\\">Sadhna Bhana</a> at SACN.";\n      var contentBlockFour = "The demand to increase revenue makes cities focus on the gains to be made from greenfield development rather than brownfield development.\\n        <br/><br/>\\n        The two columns show the fiscal consequences of greenfield vs brownfield development.\\n        <br/><br/>\\n        A completed greenfield development will generate significantly higher revenue from property rates because of the lower value of rates payable on agricultural land.\\n        <br/><br/>\\n        The bottom row of the graphic shows very clearly the quantum difference in the percentage increase in the revenue received per property in a greenfield vs a brownfield development.";\n      var contentBlockThree = "<o onClick=\\"javascript:window.open(\'https://www.sacities.net/municipal-finance/\',\'_new\');\\">Read</o> more SACN publications and research on municipal finance matters on the SACN website\\n        <o onClick=\\"javascript:window.open(\'https://www.sacities.net/state-of-cities-reporting\',\'_new\')\\">Engage</o> with SACN\\u2019s State of Cities Reporting for broader cities development context since 2004 Explore municipal finance\\u2019s interactively on National Treasury\\u2019s <o onClick=\\"javascript:window.open(\'https://municipalmoney.gov.za/\',\'_new\')\\">Municipal Money</o> Datatool\\n        Explore the <o onClick=\\"javascript:window.open(\'https://ckan.scoda.co.za/dataset/city-revenue-performance\',\'_new\')\\">full collection of State of Cities Finances 2018 datasets</o> on SCODA\\u2019s data portal\\n        <br/><br/>\\n        If you have any queries and further comment on this datastory, please email <o onClick=\\"javascript:window.location=\'mailto:danga@sacities.net\'\\">Danga Mughogho</o> at SACN.";\n      var imgOne = "/static/dist/img/scoda/datastories/ds-epw-needs.webp";\n      return /*#__PURE__*/react.createElement("div", {\n        className: "mt-4 ml-2 pr-2"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "col-12"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "ds-content-card"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "ds-content-card-header"\n      }, /*#__PURE__*/react.createElement(DataStories_Content_Card_Header/* default */.Z, {\n        storyTitle: this.props.storyTitle,\n        storySubtitle: this.props.storySubtitle,\n        filter: this.props.filter,\n        filterColor: this.props.filterColor,\n        author: this.props.author,\n        publishedDate: this.props.publishedDate\n      })), /*#__PURE__*/react.createElement("div", {\n        className: "card-body pt-4 pb-5 mt-5"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement(DataStories_Content_Card_ContentBlock/* default */.Z, {\n        contentHeading: "Introduction",\n        content: "The unemployment rate remains at an unfortunate 26.7% in South Africa. Curbing this rate has been a great challenge for the South African government, especially with the mismatch in the job demand and supply in the country. Public employment programmes such as the Department of Public Work\\u2019s Expanded Public Works Programme play a crucial role in creating employment for the country\\u2019s surplus of unskilled and semi-skilled labour."\n      })), /*#__PURE__*/react.createElement("div", {\n        className: "row mt-4"\n      }, /*#__PURE__*/react.createElement(DataStories_Content_Card_HighlightBlock/* default */.Z, {\n        infoBlockText: this.props.infoBlockText\n      })), /*#__PURE__*/react.createElement("div", {\n        className: "row mt-4"\n      }, /*#__PURE__*/react.createElement(DataStories_Content_Card_ContentBlock/* default */.Z, {\n        contentHeading: "South Africa\\u2019s Job Mismatch",\n        content: "Recent statistics from Stats SA show that the majority of people who are not in employment, education or training (NEETs) in South Africa have some level of secondary schooling, but no matric. This implies that most of the people that are unemployed are either unskilled or semi-skilled."\n      })), /*#__PURE__*/react.createElement("div", {\n        className: "row mt-5"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "module tabs tabs_vertical tabs_vertical_top",\n        id: "tabs_vertical"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "container-fluid"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "col-md-7 tabs_vertical--content"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "tab-content",\n        id: "v-pills-tabContent"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "tab-pane fade show active",\n        id: "v-pills-top-1a",\n        role: "tabpanel",\n        "aria-labelledby": "v-pills-top-1a-tab"\n      }, /*#__PURE__*/react.createElement("img", {\n        alt: "diagram",\n        src: "/static/dist/img/scoda/datastories/diagram_sa-neets_slide-1.webp"\n      })), /*#__PURE__*/react.createElement("div", {\n        className: "tab-pane fade",\n        id: "v-pills-top-2a",\n        role: "tabpanel",\n        "aria-labelledby": "v-pills-top-2a-tab"\n      }, /*#__PURE__*/react.createElement("img", {\n        alt: "diagram",\n        src: "/static/dist/img/scoda/datastories/diagram_sa-neets_slide-2.webp"\n      })), /*#__PURE__*/react.createElement("div", {\n        className: "tab-pane fade",\n        id: "v-pills-top-3a",\n        role: "tabpanel",\n        "aria-labelledby": "v-pills-top-3a-tab"\n      }, /*#__PURE__*/react.createElement("img", {\n        alt: "diagram",\n        src: "/static/dist/img/scoda/datastories/diagram_sa-neets_slide-3.webp"\n      })), /*#__PURE__*/react.createElement("div", {\n        className: "tab-pane fade",\n        id: "v-pills-top-4a",\n        role: "tabpanel",\n        "aria-labelledby": "v-pills-top-4a-tab"\n      }, /*#__PURE__*/react.createElement("img", {\n        alt: "diagram",\n        src: "/static/dist/img/scoda/datastories/diagram_sa-neets_slide-4.webp"\n      })), /*#__PURE__*/react.createElement("div", {\n        className: "tab-pane fade",\n        id: "v-pills-top-5a",\n        role: "tabpanel",\n        "aria-labelledby": "v-pills-top-5a-tab"\n      }, /*#__PURE__*/react.createElement("img", {\n        alt: "diagram",\n        src: "/static/dist/img/scoda/datastories/diagram_sa-neets_slide-5.webp"\n      })), /*#__PURE__*/react.createElement("div", {\n        className: "tab-pane fade",\n        id: "v-pills-top-6a",\n        role: "tabpanel",\n        "aria-labelledby": "v-pills-top-6a-tab"\n      }, /*#__PURE__*/react.createElement("img", {\n        alt: "diagram",\n        src: "/static/dist/img/scoda/datastories/diagram_sa-neets_slide-6.webp"\n      })))), /*#__PURE__*/react.createElement("div", {\n        className: "col-md-5 tabs_vertical--pills"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "nav flex-column nav-pills",\n        id: "v-pills-tab",\n        role: "tablist",\n        "aria-orientation": "vertical"\n      }, /*#__PURE__*/react.createElement("a", {\n        className: "tabs_vertical--pills--pill nav-link-2 active",\n        id: "v-pills-top-1a-tab",\n        "data-toggle": "pill",\n        href: "#v-pills-top-1a",\n        role: "tab",\n        "aria-controls": "v-pills-top-1a",\n        "aria-selected": "true"\n      }, "show"), /*#__PURE__*/react.createElement("span", {\n        className: "tabs_vertical--tooltips--tooltip"\n      }, "Overview"), /*#__PURE__*/react.createElement("a", {\n        className: "tabs_vertical--pills--pill nav-link-2",\n        id: "v-pills-top-2a-tab",\n        "data-toggle": "pill",\n        href: "#v-pills-top-2a",\n        role: "tab",\n        "aria-controls": "v-pills-top-2a",\n        "aria-selected": "false"\n      }, "show"), /*#__PURE__*/react.createElement("span", {\n        className: "tabs_vertical--tooltips--tooltip"\n      }, "The majority of young people between ages 15-24 are NEETs"), /*#__PURE__*/react.createElement("a", {\n        className: "tabs_vertical--pills--pill nav-link-2",\n        id: "v-pills-top-3a-tab",\n        "data-toggle": "pill",\n        href: "#v-pills-top-3a",\n        role: "tab",\n        "aria-controls": "v-pills-top-3a",\n        "aria-selected": "false"\n      }, "show"), /*#__PURE__*/react.createElement("span", {\n        className: "tabs_vertical--tooltips--tooltip"\n      }, "If we focus on young people that are NEETs, we begin to see a gender disparity."), /*#__PURE__*/react.createElement("a", {\n        className: "tabs_vertical--pills--pill nav-link-2",\n        id: "v-pills-top-4a-tab",\n        "data-toggle": "pill",\n        href: "#v-pills-top-4a",\n        role: "tab",\n        "aria-controls": "v-pills-top-4a",\n        "aria-selected": "false"\n      }, "show"), /*#__PURE__*/react.createElement("span", {\n        className: "tabs_vertical--tooltips--tooltip"\n      }, "The overall NEET rate did not change from Q1: 2017 to Q1: 2018"), /*#__PURE__*/react.createElement("a", {\n        className: "tabs_vertical--pills--pill nav-link-2",\n        id: "v-pills-top-5a-tab",\n        "data-toggle": "pill",\n        href: "#v-pills-top-5a",\n        role: "tab",\n        "aria-controls": "v-pills-top-5a",\n        "aria-selected": "false"\n      }, "show"), /*#__PURE__*/react.createElement("span", {\n        className: "tabs_vertical--tooltips--tooltip"\n      }, "However, the male NEET rate dropped by 0,9 percentage pts"), /*#__PURE__*/react.createElement("a", {\n        className: "tabs_vertical--pills--pill nav-link-2",\n        id: "v-pills-top-6a-tab",\n        "data-toggle": "pill",\n        href: "#v-pills-top-6a",\n        role: "tab",\n        "aria-controls": "v-pills-top-6a",\n        "aria-selected": "false"\n      }, "show"), /*#__PURE__*/react.createElement("span", {\n        className: "tabs_vertical--tooltips--tooltip"\n      }, "While, the female NEET rate rose by 1,0 percentage pt"))))))), /*#__PURE__*/react.createElement("div", {\n        className: "row mt-4"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "col pt-4 pl-5 pr-5 pb-4 ds-light-highlight"\n      }, "South Africa therefore requires a job demand of unskilled-semi skilled labour to absorb the majority of its unemployed. More of these jobs are required to absorb people who are losing their jobs in the agricultural and mining sectors. However, most of the jobs available require a skilled and professional labour force, making it difficult for the majority of job seekers to find jobs that match their skill levels.")), /*#__PURE__*/react.createElement("div", {\n        className: "row mt-4"\n      }), /*#__PURE__*/react.createElement("div", {\n        className: "row mt-4 chart-heights-mobile"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "col-10"\n      }), /*#__PURE__*/react.createElement("div", {\n        className: "col-0 float-right ds-download-button",\n        onClick: this.downloadChart\n      }, /*#__PURE__*/react.createElement("a", {\n        id: "download",\n        download: "chart.png",\n        style: {\n          color: \'#fff\',\n          textDecoration: \'none\'\n        }\n      }, "Download as PNG")), /*#__PURE__*/react.createElement("div", {\n        className: "container-fluid justify-content-center"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "ds-subheader"\n      }, "Skill levels required in South Africa")), /*#__PURE__*/react.createElement("br", null), /*#__PURE__*/react.createElement("br", null), /*#__PURE__*/react.createElement("div", {\n        className: "container-fluid justify-content-center desktop"\n      }, /*#__PURE__*/react.createElement("canvas", {\n        id: "mainChart",\n        className: "w-100"\n      })), /*#__PURE__*/react.createElement("div", {\n        className: "container-fluid justify-content-center mobile"\n      }, /*#__PURE__*/react.createElement(es/* Pie */.by, {\n        data: this.pie_data,\n        width: "30%",\n        height: "250",\n        options: {\n          maintainAspectRatio: false\n        }\n      }))), /*#__PURE__*/react.createElement("div", {\n        className: "row mt-3"\n      }, /*#__PURE__*/react.createElement(DataStories_Content_Card_Data_Information/* default */.Z, {\n        dataHeading: "Source",\n        dataDescription: "micseta \\u2013 Sector Skills Plan, 2018"\n      })), /*#__PURE__*/react.createElement("div", {\n        className: "row mt-5"\n      }, /*#__PURE__*/react.createElement(DataStories_Content_Card_ContentBlock/* default */.Z, {\n        contentHeading: "The Expanded Public Works Programme",\n        content: "Programmes like the Expanded Public Works Programme (EPWP) become important in the South African context as they offer job opportunities and training to the unskilled and semi-skilled labour force in the country."\n      })), /*#__PURE__*/react.createElement("div", {\n        className: "row mt-4"\n      }), /*#__PURE__*/react.createElement("div", {\n        className: "row mt-4"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "col-10"\n      }), /*#__PURE__*/react.createElement("div", {\n        className: "col-0 float-right ds-download-button",\n        onClick: this.downloadChart2\n      }, /*#__PURE__*/react.createElement("a", {\n        id: "download2",\n        download: "chart.png",\n        style: {\n          color: \'#fff\',\n          textDecoration: \'none\'\n        }\n      }, "Download as PNG")), /*#__PURE__*/react.createElement("div", {\n        className: "container-fluid justify-content-center"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "ds-subheader"\n      }, "Work opportunities created by the EPWP, Phase 1-3")), /*#__PURE__*/react.createElement("br", null), /*#__PURE__*/react.createElement("br", null), /*#__PURE__*/react.createElement("div", {\n        className: "col chart-heights-mobile"\n      }, /*#__PURE__*/react.createElement("canvas", {\n        id: "mainChart2"\n      })), /*#__PURE__*/react.createElement("div", {\n        className: "col ml-3 ds-epwp"\n      }, /*#__PURE__*/react.createElement(DataStories_Content_Card_ContentBlock/* default */.Z, {\n        content: contentBlockOne\n      }))), /*#__PURE__*/react.createElement("div", {\n        className: "row mt-3"\n      }, /*#__PURE__*/react.createElement(DataStories_Content_Card_Data_Information/* default */.Z, {\n        dataHeading: "Source",\n        dataDescription: "State of the EPWP in SA Cities Report, 2017/18"\n      })), /*#__PURE__*/react.createElement("div", {\n        className: "row mt-4"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "col-10"\n      }), /*#__PURE__*/react.createElement("div", {\n        className: "col-0 float-right ds-download-button",\n        onClick: this.downloadChart3\n      }, /*#__PURE__*/react.createElement("a", {\n        id: "download3",\n        download: "chart.png",\n        style: {\n          color: \'#fff\',\n          textDecoration: \'none\'\n        }\n      }, "Download as PNG")), /*#__PURE__*/react.createElement("div", {\n        className: "container-fluid mt-2 justify-content-center"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "ds-subheader"\n      }, "Number of work opportunities created by the EPWP in South African cities"), /*#__PURE__*/react.createElement("div", {\n        className: "chart-mainchart3--mobile"\n      }, /*#__PURE__*/react.createElement("p", {\n        className: "select2--label"\n      }, "Cities :"), /*#__PURE__*/react.createElement(Select, {\n        value: this.state.place,\n        placeholder: "Select",\n        id: mydata.pl.id,\n        multiple: mydata.pl.multiple,\n        data: mydata.pl.data,\n        name: "gender",\n        onChange: this.place\n      }))), /*#__PURE__*/react.createElement("br", null), /*#__PURE__*/react.createElement("br", null), /*#__PURE__*/react.createElement("canvas", {\n        id: "mainChart3",\n        className: "w-100 h-100 chart-mainchart3--desktop"\n      }), /*#__PURE__*/react.createElement("canvas", {\n        id: "mainChart3_mobile",\n        className: "w-100 chart-mainchart3--mobile",\n        style: {\n          height: 450\n        }\n      })), /*#__PURE__*/react.createElement("div", {\n        className: "row mt-3"\n      }, /*#__PURE__*/react.createElement(DataStories_Content_Card_Data_Information/* default */.Z, {\n        dataHeading: "Source",\n        dataDescription: "State of the EPWP in SA Cities Report, 2017/18"\n      })), /*#__PURE__*/react.createElement("div", {\n        className: "row mt-4"\n      }, /*#__PURE__*/react.createElement(DataStories_Content_Card_ContentBlock/* default */.Z, {\n        contentHeading: "Key Message",\n        content: contentBlockTwo\n      })), /*#__PURE__*/react.createElement("div", {\n        className: "row mt-4"\n      }, /*#__PURE__*/react.createElement(DataStories_Content_Card_ContentBlock/* default */.Z, {\n        contentHeading: "Resources",\n        content: resources\n      })))))));\n    }\n  }]);\n  return DataStoriesContentCardEPW;\n}(react.Component);\n\n;// CONCATENATED MODULE: ./js/components/DataStories.EPW.jsx\nfunction DataStories_EPW_typeof(obj) { "@babel/helpers - typeof"; return DataStories_EPW_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, DataStories_EPW_typeof(obj); }\nfunction DataStories_EPW_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\nfunction DataStories_EPW_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction DataStories_EPW_createClass(Constructor, protoProps, staticProps) { if (protoProps) DataStories_EPW_defineProperties(Constructor.prototype, protoProps); if (staticProps) DataStories_EPW_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\nfunction DataStories_EPW_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) DataStories_EPW_setPrototypeOf(subClass, superClass); }\nfunction DataStories_EPW_setPrototypeOf(o, p) { DataStories_EPW_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return DataStories_EPW_setPrototypeOf(o, p); }\nfunction DataStories_EPW_createSuper(Derived) { var hasNativeReflectConstruct = DataStories_EPW_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = DataStories_EPW_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = DataStories_EPW_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return DataStories_EPW_possibleConstructorReturn(this, result); }; }\nfunction DataStories_EPW_possibleConstructorReturn(self, call) { if (call && (DataStories_EPW_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return DataStories_EPW_assertThisInitialized(self); }\nfunction DataStories_EPW_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\nfunction DataStories_EPW_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction DataStories_EPW_getPrototypeOf(o) { DataStories_EPW_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return DataStories_EPW_getPrototypeOf(o); }\n\n\n\nvar DataStoriesEPW = /*#__PURE__*/function (_Component) {\n  DataStories_EPW_inherits(DataStoriesEPW, _Component);\n  var _super = DataStories_EPW_createSuper(DataStoriesEPW);\n  function DataStoriesEPW(props) {\n    DataStories_EPW_classCallCheck(this, DataStoriesEPW);\n    return _super.call(this, props);\n  }\n  DataStories_EPW_createClass(DataStoriesEPW, [{\n    key: "render",\n    value: function render() {\n      return /*#__PURE__*/react.createElement("div", {\n        className: "container px-3 data-story-page"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "col w-50 d-flex justify-content-center"\n      }, /*#__PURE__*/react.createElement(DataStories_Navigation/* default */.Z, null))), /*#__PURE__*/react.createElement("div", {\n        className: "row"\n      }, /*#__PURE__*/react.createElement("div", {\n        className: "col"\n      }, /*#__PURE__*/react.createElement(DataStoriesContentCardEPW, {\n        storyTitle: "The EPWP in metropolitan municipalities",\n        storySubtitle: "Lowering the high unemployment rate and alleviating poverty in South Africa",\n        filter: "Inclusive Cities",\n        filterColor: "#FFC057",\n        author: "The South African Cities Network",\n        publishedDate: "31 January 2020",\n        infoBlockText: "What is the role of Public Employment Programmes in creating jobs in South Africa?"\n      }))), /*#__PURE__*/react.createElement("div", {\n        className: "row p-5"\n      }));\n    }\n  }]);\n  return DataStoriesEPW;\n}(react.Component);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///23407\n')}}]);