{"version":3,"file":"js_components_Subnav_jsx.js","mappings":"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","sources":["webpack://ocl_bb_library/./js/components/Button.jsx","webpack://ocl_bb_library/./js/components/DownloadScreenCapture.jsx","webpack://ocl_bb_library/./js/components/Dropdown.jsx","webpack://ocl_bb_library/./js/components/Subnav.jsx","webpack://ocl_bb_library/./scss/components/Subnav.scss","webpack://ocl_bb_library/./scss/components/Subnav.scss?c393"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nexport default class Button extends Component {\r\n\r\n  render() {\r\n\r\n    const imageBootstapStyleOverride = {\r\n      position: \"relative\",\r\n      top: \"unset\",\r\n      right: \"unset\"\r\n    }\r\n\r\n    const downloadLinkBootstapStyleOverride = {\r\n      display: \"flex\",\r\n      flexDirection: \"row\",\r\n      alignItems: \"center\",\r\n      gap: \"12px\",\r\n   \r\n    }\r\n\r\n    return (\r\n      <a href={this.props.href} target={this.props.target}\r\n        id={this.props.id} onClick={this.props.onClick}\r\n        className={\"btn \" + this.props.className} style={downloadLinkBootstapStyleOverride}>\r\n\r\n        {this.props.text}{this.props.icon}{this.props.children}\r\n\r\n { this.props.downloadBtn?\r\n        <img className=\"subnav--cta---download_icon\" style={imageBootstapStyleOverride} src=\"/static/dist/img/icon_download.webp\" alt=\"download_icon\" />:\"\"\r\n}      </a>\r\n    )\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport Button from './Button';\r\nimport { Modal, ModalBody, Spinner } from 'reactstrap';\r\n\r\nconst DownloadScreenCapture = (props) => {\r\n\r\n  const [loader, setLoader] = useState(false)\r\n  const download = (e) => {\r\n\r\n    setLoader(true)\r\n    var htmlToImage = require('html-to-image');\r\n    e.preventDefault()\r\n    htmlToImage.toJpeg(document.getElementById('content'), { quality: 0.95 })\r\n      .then(function (dataUrl) {\r\n        setLoader(false)\r\n        var link = document.createElement('a');\r\n        link.download = 'data-snapshot.png';\r\n        link.href = dataUrl;\r\n        link.click();\r\n      });\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <Button className={[\"download-screen-capture \"] + props.className} onClick={download} text={props.buttonText} id=\"download\" downloadBtn={true}/>\r\n      {loader ?\r\n        <Modal id=\"loader\" isOpen={loader} className=\"modal-dialog-centered loader\">\r\n          <ModalBody>\r\n            <div className=\"row\">\r\n              <div className=\"col-2\"></div>\r\n              <div className=\"col-0 ml-3 pt-4\">\r\n                <Spinner type=\"grow\" color=\"secondary\" size=\"sm\" />\r\n                <Spinner type=\"grow\" color=\"success\" size=\"sm\" />\r\n                <Spinner type=\"grow\" color=\"danger\" size=\"sm\" />\r\n                <Spinner type=\"grow\" color=\"warning\" size=\"sm\" />\r\n              </div>\r\n              <div className=\"col-0 pt-4 pl-4 float-left\">Downloading Image...</div>\r\n            </div>\r\n            <br />\r\n          </ModalBody>\r\n        </Modal>\r\n        : ''\r\n      }\r\n    </>\r\n\r\n  );\r\n}\r\nexport default DownloadScreenCapture;","import React, { useEffect, useState } from 'react';\r\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport '../../scss/components/Subnav.scss'\r\n\r\nconst Example = (props) => {\r\n  const [dropdownOpen, setOpen] = useState(false);\r\n\r\n  const toggle = () => setOpen(!dropdownOpen);\r\n\r\n  return (\r\n    <ButtonDropdown isOpen={dropdownOpen} toggle={toggle}  className=\"dropdown\">\r\n      <DropdownToggle caret>\r\n        {props.name}\r\n      </DropdownToggle>\r\n      <DropdownMenu>\r\n        {props.dropDownItem.dropdownMenu.map((item, index) =>\r\n          <DropdownItem key={index} active={item.active} href={item.href}>{item.name}</DropdownItem>\r\n        )}\r\n      </DropdownMenu>\r\n    </ButtonDropdown>\r\n  );\r\n}\r\n\r\nexport default Example;","// COMPONENT NOTES\r\n// This component requires the following sub components \r\n// - Dropdown\r\n// - DownloadScreenCapture \r\n// - Collapse \r\n\r\n// Npm packages required:\r\n// - html2canvas\r\n// - reactstrap\r\nimport React from 'react'\r\nimport DownloadScreenCapture from './../components/DownloadScreenCapture';\r\nimport Dropdown from './../components/Dropdown';\r\nimport PropTypes from 'prop-types';\r\nimport { useGlobalClose } from '../context';\r\nimport { useCloseAllErrors } from '../context';\r\n\r\n\r\nconst SubNav = (props) => {\r\n\r\n  const newChartsCondition = props.dropdownName === \"Employment\" || props.dropdownName === \"Dwellings\" || props.dropdownName === \"Household Income\"\r\n  \r\n  let globalCityDropDownClose = () =>{}\r\n\r\n  if (newChartsCondition) {\r\n    \r\n    globalCityDropDownClose = useGlobalClose()\r\n  }\r\n\r\n  const closeAlerts = useCloseAllErrors()\r\n\r\n  const closeAllAlerts = () => {\r\n    globalCityDropDownClose()\r\n    \r\n    let isClearable = false\r\n\r\n    closeAlerts.error.forEach((item)=>{\r\n      if(item.errorThrown === true){\r\n        isClearable = true\r\n      }\r\n    })\r\n    \r\n    if(isClearable){\r\n    \r\n      const newState = closeAlerts.error.map((obj) => {\r\n\r\n        return { errorThrown: false };\r\n    });\r\n\r\n    closeAlerts.setError(newState);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={[\"subnav subnav--wrapper container-fluid \"] + props.className}\r\n    onClick={()=>{closeAllAlerts()}}>\r\n      <div className=\"subnav--breadcrumbs\">\r\n        <strong>{props.name}</strong> / <Dropdown name={props.dropdownName} header={props.dropdownHeading} menu={props.dropdownMenu} dropDownItem={props.dropDownItem} ></Dropdown>\r\n      </div>\r\n\r\n      <div className=\"subnav--cta\">\r\n        <div className='row'>\r\n          <div className=''><DownloadScreenCapture targetID=\"charts-container\" filename=\"image.png\" className=\"round btn_secondary\" buttonText={props.buttonText}></DownloadScreenCapture> </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubNav;\r\n\r\nSubNav.propTypes = {\r\n  /**\r\n   * Title text for the component\r\n   */\r\n  name: PropTypes.string,\r\n  /**\r\n   * Main label for the dropdown sub component\r\n   */\r\n  dropdownName: PropTypes.string,\r\n  /**\r\n   * Heading within the dropdown sub component\r\n   */\r\n  dropdownHeading: PropTypes.string,\r\n  /**\r\n   * Menu for the dropdown populated by an object\r\n   */\r\n  dropdownMenu: PropTypes.object,\r\n  /**\r\n   * Text for the sub nav button\r\n   */\r\n  buttonText: PropTypes.string,\r\n  /**\r\n   * Add custom classes to the parent div wrapper of this component\r\n   */\r\n  className: PropTypes.string,\r\n\r\n};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".charts_dashboards--button {\\n  box-shadow: none !important;\\n}\\n.charts_dashboards--button:hover {\\n  box-shadow: none !important;\\n}\\n\\n.dropdown > .btn {\\n  box-shadow: none !important;\\n}\\n.dropdown > .btn:hover {\\n  box-shadow: none !important;\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\n      import API from \"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./Subnav.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./Subnav.scss\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":["React","Component","Button","imageBootstapStyleOverride","position","top","right","downloadLinkBootstapStyleOverride","display","flexDirection","alignItems","gap","props","href","target","id","onClick","className","text","icon","children","downloadBtn","useState","Modal","ModalBody","Spinner","DownloadScreenCapture","loader","setLoader","download","e","htmlToImage","require","preventDefault","toJpeg","document","getElementById","quality","then","dataUrl","link","createElement","click","buttonText","useEffect","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","Example","dropdownOpen","setOpen","toggle","name","dropDownItem","dropdownMenu","map","item","index","active","Dropdown","PropTypes","useGlobalClose","useCloseAllErrors","SubNav","newChartsCondition","dropdownName","globalCityDropDownClose","closeAlerts","closeAllAlerts","isClearable","error","forEach","errorThrown","newState","obj","setError","dropdownHeading","propTypes","string","object"],"sourceRoot":""}