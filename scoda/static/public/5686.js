"use strict";(self.webpackChunkocl_bb_library=self.webpackChunkocl_bb_library||[]).push([[5686],{95686:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  "default": () => (/* binding */ CitizenEngagement_Socr_Citizens_Engagement)\n});\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(67294);\n// EXTERNAL MODULE: ./js/components/Sidebar_left.jsx\nvar Sidebar_left = __webpack_require__(13174);\n// EXTERNAL MODULE: ./js/components/Subnav.jsx + 2 modules\nvar Subnav = __webpack_require__(92202);\n// EXTERNAL MODULE: ./js/components/Select.jsx\nvar components_Select = __webpack_require__(17730);\n// EXTERNAL MODULE: ./node_modules/axios/index.js\nvar axios = __webpack_require__(9669);\nvar axios_default = /*#__PURE__*/__webpack_require__.n(axios);\n// EXTERNAL MODULE: ./js/data/panelData.js\nvar data_panelData = __webpack_require__(60622);\n;// CONCATENATED MODULE: ./js/components/CitizenEngagement/Citizen.Engagments.Stat.Panel.jsx\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n\n\n\nvar CitizenEngagmentStatPanel = function CitizenEngagmentStatPanel() {\n  var _useState = useState(\'Buffalo City\'),\n    _useState2 = _slicedToArray(_useState, 2),\n    place = _useState2[0],\n    setPlace = _useState2[1];\n  var _useState3 = useState(40),\n    _useState4 = _slicedToArray(_useState3, 2),\n    wasteful_expenditure_national = _useState4[0],\n    setwasteful_expenditure_national = _useState4[1];\n  var _useState5 = useState(64),\n    _useState6 = _slicedToArray(_useState5, 2),\n    registered_national = _useState6[0],\n    setRegistered_national = _useState6[1];\n  var _useState7 = useState(51),\n    _useState8 = _slicedToArray(_useState7, 2),\n    irregular_expenditure = _useState8[0],\n    setirregular_expenditure = _useState8[1];\n  var _useState9 = useState(62),\n    _useState10 = _slicedToArray(_useState9, 2),\n    registered_local = _useState10[0],\n    setRegistered_local = _useState10[1];\n  //set data\n  var _useState11 = useState(panelData[0]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    data = _useState12[0],\n    setData = _useState12[1];\n  var _useState13 = useState(panelData[1].voting_and_reg_2019_averages),\n    _useState14 = _slicedToArray(_useState13, 2),\n    voting_and_reg_2019_averages = _useState14[0],\n    setVoting_and_reg_2019_averages = _useState14[1];\n  var municipality_focus = [{\n    percentage: wasteful_expenditure_national,\n    type: "VOTER TURNOUT<br/>NATIONAL"\n  }, {\n    percentage: registered_national,\n    type: "REGISTERED<br/>NATIONAL"\n  }, {\n    percentage: irregular_expenditure,\n    type: "VOTER TURNOUT<br/>LOCAL"\n  }, {\n    percentage: registered_local,\n    type: "REGISTERED<br/>LOCAL"\n  }];\n  var places = function places(e) {\n    setPlace(e.target.value);\n    console.log(\'selected city :\', e.target.value);\n    if (e.target.value === \'Buffalo City\') {\n      setwasteful_expenditure_national(40);\n      setRegistered_national(64);\n      setirregular_expenditure(51);\n      setRegistered_local(62);\n    }\n    if (e.target.value === \'City of Cape Town\') {\n      setwasteful_expenditure_national(12);\n      setRegistered_national(32);\n      setirregular_expenditure(56);\n      setRegistered_local(43);\n    }\n    if (e.target.value === \'City of Joburg\') {\n      setwasteful_expenditure_national(34);\n      setRegistered_national(89);\n      setirregular_expenditure(56);\n      setRegistered_local(43);\n    }\n    if (e.target.value === \'Ekurhuleni\') {\n      setwasteful_expenditure_national(45);\n      setRegistered_national(34);\n      setirregular_expenditure(75);\n      setRegistered_local(56);\n    }\n    if (e.target.value === \'eThekwini\') {\n      setwasteful_expenditure_national(12);\n      setRegistered_national(34);\n      setirregular_expenditure(34);\n      setRegistered_local(56);\n    }\n    if (e.target.value === \'Mangaung\') {\n      setwasteful_expenditure_national(90);\n      setRegistered_national(54);\n      setirregular_expenditure(34);\n      setRegistered_local(67);\n    }\n    if (e.target.value === \'Nelson Mandela Bay\') {\n      setwasteful_expenditure_national(34);\n      setRegistered_national(45);\n      setirregular_expenditure(56);\n      setRegistered_local(64);\n    }\n    if (e.target.value === \'Tshwane\') {\n      setwasteful_expenditure_national(23);\n      setRegistered_national(42);\n      setirregular_expenditure(12);\n      setRegistered_local(76);\n    }\n  };\n  return /*#__PURE__*/React.createElement("div", {\n    className: "stat_display_panel"\n  }, /*#__PURE__*/React.createElement("div", {\n    className: "row stat_display_panel--numbers w-100"\n  }, /*#__PURE__*/React.createElement("div", {\n    className: "col-md-6 first_panel"\n  }, /*#__PURE__*/React.createElement("div", {\n    className: "stat_display_panel--averages"\n  }, /*#__PURE__*/React.createElement("p", {\n    className: "catagory-name "\n  }, "Averages 2019/2016 ", /*#__PURE__*/React.createElement("span", null, "(Voting and Registration)"))), /*#__PURE__*/React.createElement("div", {\n    className: "row"\n  }, voting_and_reg_2019_averages.map(function (item, i) {\n    return /*#__PURE__*/React.createElement("div", {\n      className: "col-md-3 p-0"\n    }, /*#__PURE__*/React.createElement("h1", null, item.percentage, "%"), /*#__PURE__*/React.createElement("p", {\n      dangerouslySetInnerHTML: {\n        __html: item.type\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement("div", {\n    className: "col-md-6"\n  }, /*#__PURE__*/React.createElement("div", {\n    className: "row"\n  }, /*#__PURE__*/React.createElement("div", {\n    className: "col-md-8"\n  }, " ", /*#__PURE__*/React.createElement("p", {\n    className: "catagory-name catagory-name--focusName"\n  }, "Municipality Focus 2018: ", place)), /*#__PURE__*/React.createElement("div", {\n    className: "col-md-3 "\n  }, /*#__PURE__*/React.createElement(Select, {\n    value: place,\n    placeholder: "Select a City",\n    id: data.places.id,\n    multiple: data.places.multiple,\n    data: data.places.data,\n    name: "gender",\n    onChange: places\n  }))), /*#__PURE__*/React.createElement("div", {\n    className: "row"\n  }, municipality_focus.map(function (item, i) {\n    return /*#__PURE__*/React.createElement("div", {\n      className: "col-md-3"\n    }, /*#__PURE__*/React.createElement("h1", {\n      className: item.percentage > voting_and_reg_2019_averages[i].percentage ? \'green\' : item.percentage < voting_and_reg_2019_averages[i].percentage ? \'red\' : \'none\'\n    }, item.percentage, "%"), /*#__PURE__*/React.createElement("p", {\n      dangerouslySetInnerHTML: {\n        __html: item.type\n      }\n    }));\n  })))));\n};\n/* harmony default export */ const Citizen_Engagments_Stat_Panel = ((/* unused pure expression or super */ null && (CitizenEngagmentStatPanel)));\n// EXTERNAL MODULE: ./node_modules/react-select/dist/react-select.esm.js + 32 modules\nvar react_select_esm = __webpack_require__(9713);\n// EXTERNAL MODULE: ./js/components/Button.jsx\nvar Button = __webpack_require__(11741);\n// EXTERNAL MODULE: ./node_modules/reactstrap/es/Modal.js + 1 modules\nvar Modal = __webpack_require__(85677);\n// EXTERNAL MODULE: ./node_modules/reactstrap/es/ModalBody.js\nvar ModalBody = __webpack_require__(10684);\n// EXTERNAL MODULE: ./node_modules/reactstrap/es/Spinner.js\nvar Spinner = __webpack_require__(36955);\n// EXTERNAL MODULE: ./node_modules/react-chartjs-2/es/index.js\nvar es = __webpack_require__(46799);\n// EXTERNAL MODULE: ./js/components/Barchart.jsx\nvar Barchart = __webpack_require__(32985);\n// EXTERNAL MODULE: ./node_modules/lodash/lodash.js\nvar lodash = __webpack_require__(96486);\nvar lodash_default = /*#__PURE__*/__webpack_require__.n(lodash);\n// EXTERNAL MODULE: ./scss/components/Subnav.scss\nvar components_Subnav = __webpack_require__(44448);\n;// CONCATENATED MODULE: ./js/components/CitizenEngagement/Charts.Citizen.Engagements.jsx\nfunction Charts_Citizen_Engagements_slicedToArray(arr, i) { return Charts_Citizen_Engagements_arrayWithHoles(arr) || Charts_Citizen_Engagements_iterableToArrayLimit(arr, i) || Charts_Citizen_Engagements_unsupportedIterableToArray(arr, i) || Charts_Citizen_Engagements_nonIterableRest(); }\nfunction Charts_Citizen_Engagements_nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }\nfunction Charts_Citizen_Engagements_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return Charts_Citizen_Engagements_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return Charts_Citizen_Engagements_arrayLikeToArray(o, minLen); }\nfunction Charts_Citizen_Engagements_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction Charts_Citizen_Engagements_iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction Charts_Citizen_Engagements_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\nvar style = {\n  control: function control(base) {\n    return _objectSpread(_objectSpread({}, base), {}, {\n      border: \'1px solid #4A4A4A\',\n      borderRadius: \'28px\',\n      boxShadow: \'none\',\n      \'&:hover\': {\n        border: \'1px solid #4A4A4A\',\n        borderRadius: \'28px\'\n      }\n    });\n  }\n};\nvar CitizenEngagment = function CitizenEngagment() {\n  var _useState = (0,react.useState)([]),\n    _useState2 = Charts_Citizen_Engagements_slicedToArray(_useState, 2),\n    cities = _useState2[0],\n    setCities = _useState2[1];\n  var _useState3 = (0,react.useState)([]),\n    _useState4 = Charts_Citizen_Engagements_slicedToArray(_useState3, 2),\n    turnout = _useState4[0],\n    setTurnout = _useState4[1];\n  var _useState5 = (0,react.useState)([]),\n    _useState6 = Charts_Citizen_Engagements_slicedToArray(_useState5, 2),\n    local_turnout = _useState6[0],\n    setLocalTurnout = _useState6[1];\n  var _useState7 = (0,react.useState)([]),\n    _useState8 = Charts_Citizen_Engagements_slicedToArray(_useState7, 2),\n    registered_voters = _useState8[0],\n    setRegistered_voters = _useState8[1];\n  var _useState9 = (0,react.useState)([]),\n    _useState10 = Charts_Citizen_Engagements_slicedToArray(_useState9, 2),\n    local_registered_voters = _useState10[0],\n    setLocalRegistered_voters = _useState10[1];\n  var _useState11 = (0,react.useState)([]),\n    _useState12 = Charts_Citizen_Engagements_slicedToArray(_useState11, 2),\n    select_values = _useState12[0],\n    setSelectValues = _useState12[1];\n  var colorsByYearGreen = function colorsByYearGreen(count) {\n    switch (count) {\n      case 0:\n        return \'#B7E0DE\';\n      case 1:\n        return \'#6ABFBB\';\n      case 2:\n        return \'#2D9B96\';\n      case 3:\n        return \'#0F7671\';\n      default:\n        return \'#0F7671\';\n    }\n  };\n  var colorsByYearOrange = function colorsByYearOrange(count) {\n    switch (count) {\n      case 0:\n        return \'#FFD0B7\';\n      case 1:\n        return \'#FFAD81\';\n      case 2:\n        return \'#EE702D\';\n      case 3:\n        return \'#D44F08\';\n      default:\n        return \'#D44F08\';\n    }\n  };\n  var labels = function labels(city) {\n    switch (city) {\n      case \'Buffalo City\':\n        return "BUF";\n      case \'City of Cape Town\':\n        return "CPT";\n      case \'City of Joburg\':\n        return "JHB";\n      case \'Ekurhuleni\':\n        return "EKU";\n      case "Mangaung":\n        return "MAN";\n      case "Msunduzi":\n        return "MSU";\n      case "Nelson Mandela Bay":\n        return "NMA";\n      case "Tshwane":\n        return "TSH";\n      case "eThekwini":\n        return "ETH";\n    }\n  };\n  var emptyChartsData = function emptyChartsData() {\n    setTurnout([]);\n    setRegistered_voters([]);\n    setLocalRegistered_voters([]);\n    setLocalTurnout([]);\n  };\n  var onChange = function onChange(e) {\n    setSelectValues(e);\n    emptyChartsData();\n    axios_default().get("/api/explore/codebook?indicator_id=989").then(function (res) {\n      callback_select(res.data.table, setTurnout, e, colorsByYearGreen);\n    });\n    axios_default().get("/api/explore/codebook?indicator_id=989").then(function (res) {\n      callback_select(res.data.table, setRegistered_voters, e, colorsByYearOrange);\n    });\n    axios_default().get("/api/explore/codebook?indicator_id=987").then(function (res) {\n      callback_select(res.data.table, setLocalTurnout, e, colorsByYearGreen);\n    });\n    axios_default().get("/api/explore/codebook?indicator_id=983").then(function (res) {\n      callback_select(res.data.table, setLocalRegistered_voters, e, colorsByYearOrange);\n    });\n  };\n  var callback_select = function callback_select(table, callback, select_values, colors) {\n    var cit = lodash_default().map(select_values, \'value\');\n    var data = [];\n    var current_year = 2000;\n    var sum = 0;\n    var count = 0;\n    while (current_year <= new Date().getFullYear()) {\n      if (table.filter(function (value) {\n        return value[1] === current_year.toString();\n      }).length > 0) {\n        var current_data = table.filter(function (value) {\n          return value[1] === current_year.toString();\n        });\n        var values = [];\n        var chart_labels = [];\n        for (var i = 0; i < current_data.length; i++) {\n          var label = labels(current_data[i][0]);\n          if (cit.includes(label)) {\n            current_data[i][0] = label;\n            values.push(current_data[i][2]);\n            sum += current_data[i][2] ? current_data[i][2] : 0;\n          }\n        }\n        data.push({\n          year: current_year,\n          data: current_data,\n          labels: chart_labels,\n          values: values,\n          color: colors(count)\n        });\n        count = count + 1;\n      }\n      //setCities(chart_labels)\n      current_year = current_year + 1;\n    }\n    callback(data);\n  };\n  var api = function api(url, callback) {\n    axios_default().get(url).then(function (res) {\n      callback(res.data.table);\n    });\n  };\n  var voter_turnout_callback = function voter_turnout_callback(table) {\n    var data = [];\n    var current_year = 2000;\n    var sum = 0;\n    var count = 0;\n    while (current_year <= new Date().getFullYear()) {\n      if (table.filter(function (value) {\n        return value[1] === current_year.toString();\n      }).length > 0) {\n        var current_data = table.filter(function (value) {\n          return value[1] === current_year.toString();\n        });\n        var chart_labels = [];\n        var values = [];\n        for (var i = 0; i < current_data.length; i++) {\n          current_data[i][0] = labels(current_data[i][0]);\n          chart_labels.push({\n            label: current_data[i][0],\n            value: current_data[i][0]\n          });\n          values.push(current_data[i][2]);\n          sum += current_data[i][2] ? current_data[i][2] : 0;\n        }\n        data.push({\n          year: current_year,\n          //data :  current_data,\n          labels: chart_labels,\n          values: values,\n          color: colorsByYearGreen(count)\n        });\n        setCities(chart_labels);\n        setTurnout(data);\n        setSelectValues(chart_labels);\n        count = count + 1;\n      }\n      current_year = current_year + 1;\n    }\n    setTurnout(data);\n  };\n  var registered_voters_callback = function registered_voters_callback(table) {\n    var data = [];\n    var current_year = 2000;\n    var sum = 0;\n    var count = 0;\n    while (current_year <= new Date().getFullYear()) {\n      if (table.filter(function (value) {\n        return value[1] === current_year.toString();\n      }).length > 0) {\n        var current_data = table.filter(function (value) {\n          return value[1] === current_year.toString();\n        });\n        var chart_labels = [];\n        var values = [];\n        for (var i = 0; i < current_data.length; i++) {\n          current_data[i][0] = labels(current_data[i][0]);\n          chart_labels.push({\n            label: current_data[i][0],\n            value: current_data[i][0]\n          });\n          values.push(current_data[i][2]);\n          sum += current_data[i][2] ? current_data[i][2] : 0;\n        }\n        data.push({\n          year: current_year,\n          //data :  current_data,\n          labels: chart_labels,\n          values: values,\n          color: colorsByYearOrange(count)\n        });\n        count = count + 1;\n      }\n      current_year = current_year + 1;\n    }\n    setRegistered_voters(data);\n  };\n  var local_voter_turnout_callback = function local_voter_turnout_callback(table) {\n    var data = [];\n    var current_year = 2000;\n    var sum = 0;\n    var count = 0;\n    while (current_year <= new Date().getFullYear()) {\n      if (table.filter(function (value) {\n        return value[1] === current_year.toString();\n      }).length > 0) {\n        var current_data = table.filter(function (value) {\n          return value[1] === current_year.toString();\n        });\n        var chart_labels = [];\n        var values = [];\n        for (var i = 0; i < current_data.length; i++) {\n          current_data[i][0] = labels(current_data[i][0]);\n          chart_labels.push({\n            label: current_data[i][0],\n            value: current_data[i][0]\n          });\n          values.push(current_data[i][2]);\n          sum += current_data[i][2] ? current_data[i][2] : 0;\n        }\n        data.push({\n          year: current_year,\n          //data :  current_data,\n          labels: chart_labels,\n          values: values,\n          color: colorsByYearGreen(count)\n        });\n        count = count + 1;\n      }\n      current_year = current_year + 1;\n    }\n    setLocalTurnout(data);\n  };\n  var local_registered_voters_callback = function local_registered_voters_callback(table) {\n    var data = [];\n    var current_year = 2000;\n    var sum = 0;\n    var count = 0;\n    while (current_year <= new Date().getFullYear()) {\n      if (table.filter(function (value) {\n        return value[1] === current_year.toString();\n      }).length > 0) {\n        var current_data = table.filter(function (value) {\n          return value[1] === current_year.toString();\n        });\n        var chart_labels = [];\n        var values = [];\n        for (var i = 0; i < current_data.length; i++) {\n          current_data[i][0] = labels(current_data[i][0]);\n          chart_labels.push({\n            label: current_data[i][0],\n            value: current_data[i][0]\n          });\n          values.push(current_data[i][2]);\n          sum += current_data[i][2] ? current_data[i][2] : 0;\n        }\n        data.push({\n          year: current_year,\n          //data :  current_data,\n          labels: chart_labels,\n          values: values,\n          color: colorsByYearOrange(count)\n        });\n        count = count + 1;\n      }\n      current_year = current_year + 1;\n    }\n    setLocalRegistered_voters(data);\n  };\n  (0,react.useEffect)(function () {\n    api("/api/explore/codebook?indicator_id=989", voter_turnout_callback);\n    api("/api/explore/codebook?indicator_id=985", registered_voters_callback);\n    api("/api/explore/codebook?indicator_id=987", local_voter_turnout_callback);\n    api("/api/explore/codebook?indicator_id=983", local_registered_voters_callback);\n  }, []);\n  return /*#__PURE__*/react.createElement("div", null, turnout.length < 1 && local_turnout.length < 1 && registered_voters.length < 1 && local_registered_voters.length < 1 ? /*#__PURE__*/react.createElement(Modal/* default */.Z, {\n    id: "loader",\n    isOpen: turnout.length < 1 && local_turnout.length < 1 && registered_voters.length < 1 && local_registered_voters.length < 1,\n    className: "modal-dialog-centered loader"\n  }, /*#__PURE__*/react.createElement(ModalBody/* default */.Z, null, /*#__PURE__*/react.createElement("div", {\n    className: "row"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "col-2"\n  }), /*#__PURE__*/react.createElement("div", {\n    className: "col-0 ml-3 pt-4"\n  }, /*#__PURE__*/react.createElement(Spinner/* default */.Z, {\n    type: "grow",\n    color: "secondary",\n    size: "sm"\n  }), /*#__PURE__*/react.createElement(Spinner/* default */.Z, {\n    type: "grow",\n    color: "success",\n    size: "sm"\n  }), /*#__PURE__*/react.createElement(Spinner/* default */.Z, {\n    type: "grow",\n    color: "danger",\n    size: "sm"\n  }), /*#__PURE__*/react.createElement(Spinner/* default */.Z, {\n    type: "grow",\n    color: "warning",\n    size: "sm"\n  })), /*#__PURE__*/react.createElement("div", {\n    className: "col-0 pt-4 pl-4 float-left"\n  }, "Loading Content...")), /*#__PURE__*/react.createElement("br", null))) : \'\', /*#__PURE__*/react.createElement("div", {\n    className: "container-fluid charts_dashboards"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "charts_dashboards--left_container p-0"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "charts_dashboards--select"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "charts_dashboards--select-container"\n  }, /*#__PURE__*/react.createElement(react_select_esm/* default */.ZP, {\n    id: "multiple",\n    name: "filters",\n    placeholder: "Filter City",\n    value: select_values,\n    options: cities,\n    onChange: onChange,\n    isMulti: true,\n    styles: style\n  }))), /*#__PURE__*/react.createElement("div", {\n    className: "charts_dashboards--barcharts"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "row"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "col-md-6"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "charts"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "row"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "col-md-9"\n  }, /*#__PURE__*/react.createElement("h1", {\n    className: "charts_dashboards--households"\n  }, "National Election: Voter Turnout")), /*#__PURE__*/react.createElement("div", {\n    className: "col-md-3"\n  }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n    className: "charts_dashboards--button",\n    text: "Raw Data",\n    href: "/scoda/toolkit#/codebook-explorer/989",\n    target: "_blank"\n  }))), /*#__PURE__*/react.createElement(Barchart/* default */.Z, {\n    data: {\n      labels: lodash_default().map(select_values, \'label\'),\n      datasets: turnout.map(function (data) {\n        return {\n          backgroundColor: data.color,\n          borderColor: data.color,\n          data: data.values,\n          label: data.year,\n          stack: data.year\n        };\n      })\n    },\n    stepSize: 200000,\n    hundred: true,\n    divide: 1000,\n    x_label: "Number of People"\n  }))), /*#__PURE__*/react.createElement("div", {\n    className: "col-md-6"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "charts"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "row"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "col-md-9"\n  }, /*#__PURE__*/react.createElement("h1", {\n    className: "charts_dashboards--households"\n  }, "National Election: Registered Voters")), /*#__PURE__*/react.createElement("div", {\n    className: "col-md-3"\n  }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n    className: "charts_dashboards--button",\n    text: "Raw Data",\n    href: "/scoda/toolkit#/codebook-explorer/985",\n    target: "_blank"\n  }))), /*#__PURE__*/react.createElement(Barchart/* default */.Z, {\n    data: {\n      labels: lodash_default().map(select_values, \'label\'),\n      datasets: registered_voters.map(function (data) {\n        return {\n          backgroundColor: data.color,\n          borderColor: data.color,\n          data: data.values,\n          label: data.year,\n          stack: data.year\n        };\n      })\n    },\n    stepSize: 500000,\n    hundred: true,\n    divide: 1000,\n    x_label: "Number of People"\n  })))), /*#__PURE__*/react.createElement("hr", null), /*#__PURE__*/react.createElement("div", {\n    className: "row"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "col-md-6"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "charts"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "row"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "col-md-9"\n  }, /*#__PURE__*/react.createElement("h1", {\n    className: "charts_dashboards--households"\n  }, "Local Election: Voter Turnout")), /*#__PURE__*/react.createElement("div", {\n    className: "col-md-3"\n  }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n    className: "charts_dashboards--button",\n    text: "Raw Data",\n    href: "/scoda/toolkit#/codebook-explorer/987",\n    target: "_blank"\n  }))), /*#__PURE__*/react.createElement(Barchart/* default */.Z, {\n    data: {\n      labels: lodash_default().map(select_values, \'label\'),\n      datasets: local_turnout.map(function (data) {\n        return {\n          backgroundColor: data.color,\n          borderColor: data.color,\n          data: data.values,\n          label: data.year,\n          stack: data.year\n        };\n      })\n    },\n    stepSize: 500000,\n    hundred: true,\n    divide: 1000,\n    x_label: "Number of People"\n  }))), /*#__PURE__*/react.createElement("div", {\n    className: "col-md-6"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "charts"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "row"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "col-md-9"\n  }, /*#__PURE__*/react.createElement("h1", {\n    className: "charts_dashboards--households"\n  }, "Local Election: Registered Voters")), /*#__PURE__*/react.createElement("div", {\n    className: "col-md-3"\n  }, /*#__PURE__*/react.createElement(Button/* default */.Z, {\n    className: "charts_dashboards--button",\n    text: "Raw Data",\n    href: "/scoda/toolkit#/codebook-explorer/983",\n    target: "_blank"\n  }))), /*#__PURE__*/react.createElement(Barchart/* default */.Z, {\n    data: {\n      labels: lodash_default().map(select_values, \'label\'),\n      datasets: local_registered_voters.map(function (data) {\n        return {\n          backgroundColor: data.color,\n          borderColor: data.color,\n          data: data.values,\n          label: data.year,\n          stack: data.year\n        };\n      })\n    },\n    stepSize: 200000,\n    hundred: true,\n    divide: 1000,\n    x_label: "Number of People"\n  }))))))), /*#__PURE__*/react.createElement("div", {\n    className: "spacer"\n  }));\n};\n/* harmony default export */ const Charts_Citizen_Engagements = (CitizenEngagment);\n;// CONCATENATED MODULE: ./js/components/CitizenEngagement/Socr.Citizens.Engagement.jsx\n\n\n\n\n\nvar Socr_Citizens_Engagement = function Socr_Citizens_Engagement() {\n  var subNavContent = {\n    dropdownMenu: [{\n      name: "Service Delivery",\n      href: "socr#/service_delivery",\n      active: false\n    }, {\n      name: "Citizen Engagement",\n      href: "socr#/citizen_engagement",\n      active: true\n    }, {\n      name: "Municipal Human Resources",\n      href: "socr#/human_resources",\n      active: false\n    }, {\n      name: "People and Households",\n      href: "socr#/people_household",\n      active: false\n    }, {\n      name: "Employment",\n      href: "socr#/employment",\n      active: false\n    }, {\n      name: "Dwellings",\n      href: "socr#/dwellings",\n      active: false\n    }, {\n      name: "Household Income",\n      href: "socr#/household_income",\n      active: false\n    }, {\n      name: "Food Security, Literacy and Inequality",\n      href: "socr#/food_security",\n      active: false\n    }, {\n      name: "Life Expectancy and Health",\n      href: "socr#/life_expectancy",\n      active: false\n    }, {\n      name: "Education",\n      href: "socr#/education",\n      active: false\n    }, {\n      name: "Sustainability",\n      href: "socr#/sustainability",\n      active: false\n    }]\n  };\n  return /*#__PURE__*/react.createElement("div", {\n    className: "sorc_dashboards"\n  }, /*#__PURE__*/react.createElement("div", {\n    className: "spacer--top"\n  }), /*#__PURE__*/react.createElement(Subnav["default"], {\n    name: "State of Cities Reports",\n    dropdownName: "Citizen Engagement",\n    dropDownItem: subNavContent,\n    buttonText: "Download as PNG"\n  }), /*#__PURE__*/react.createElement(Sidebar_left["default"], null), /*#__PURE__*/react.createElement("div", {\n    id: "content",\n    className: "sorc_dashboards sorc_dashboards--citizen_engagement"\n  }, /*#__PURE__*/react.createElement(Charts_Citizen_Engagements, null)));\n};\n/* harmony default export */ const CitizenEngagement_Socr_Citizens_Engagement = (Socr_Citizens_Engagement);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///95686\n')}}]);